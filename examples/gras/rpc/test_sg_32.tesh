#! ./tesh

# There is no timestamp in this test, because we exchange exceptions,
# which contain not only the filename (which could change in case of
# VPATH builds), but also the function name (which changes with the
# optimization level: if inlining, gcc changes it).

! timeout 10
! output sort
$ $SG_TEST_EXENV ./rpc_simulator$EXEEXT ${srcdir:=.}/../../msg/small_platform.xml ${srcdir:=.}/rpc.xml "--log=root.fmt:[0]%e(%i:%P@%h)%e%m%n"
> [0] (1:server@Tremblay) Launch server (port=4000)
> [0] (1:server@Tremblay) Listening on port 4000
> [0] (1:server@Tremblay) Got message PING(1234) from Fafard:5000
> [0] (1:server@Tremblay) Answered with PONG(4321)
> [0] (1:server@Tremblay) Asked to die by Fafard:5000
> [0] (1:server@Tremblay) Done.
> [0] (1:server@Tremblay) Exiting GRAS
> [0] (2:forwarder@Ginette) Launch forwarder (port=4000)
> [0] (2:forwarder@Ginette) Forward a request
> [0] (2:forwarder@Ginette) Forward a request
> [0] (2:forwarder@Ginette) Forward a request
> [0] (2:forwarder@Ginette) Forward a request
> [0] (2:forwarder@Ginette) Forward a request
> [0] (2:forwarder@Ginette) Asked to die by Fafard:5000
> [0] (2:forwarder@Ginette) Done.
> [0] (2:forwarder@Ginette) Exiting GRAS
> [0] (3:client@Fafard) Launch client (server on Tremblay:4000)
> [0] (3:client@Fafard) Connected to Tremblay:4000.
> [0] (3:client@Fafard) Connected to server which is on Tremblay:4000
> [0] (3:client@Fafard) The answer to PING(1234) on Tremblay:4000 is PONG(4321)
> [0] (3:client@Fafard) Call the exception raising RPC
> [0] (3:client@Fafard) Got the expected exception when calling the exception raising RPC
> [0] (3:client@Fafard) Called the exception raising RPC
> [0] (3:client@Fafard) Call the exception raising RPC (i=0)
> [0] (3:client@Fafard) Call the exception raising RPC (i=1)
> [0] (3:client@Fafard) Call the exception raising RPC (i=2)
> [0] (3:client@Fafard) Call the exception raising RPC (i=3)
> [0] (3:client@Fafard) Call the exception raising RPC (i=4)
> [0] (3:client@Fafard) Call the exception raising RPC on the forwarder (i=0)
> [0] (3:client@Fafard) Got the expected exception when calling the exception raising RPC
> [0] (3:client@Fafard) Call the exception raising RPC on the forwarder (i=1)
> [0] (3:client@Fafard) Got the expected exception when calling the exception raising RPC
> [0] (3:client@Fafard) Call the exception raising RPC on the forwarder (i=2)
> [0] (3:client@Fafard) Got the expected exception when calling the exception raising RPC
> [0] (3:client@Fafard) Call the exception raising RPC on the forwarder (i=3)
> [0] (3:client@Fafard) Got the expected exception when calling the exception raising RPC
> [0] (3:client@Fafard) Call the exception raising RPC on the forwarder (i=4)
> [0] (3:client@Fafard) Got the expected exception when calling the exception raising RPC
> [0] (3:client@Fafard) Ask Ginette:4000 to die
> [0] (3:client@Fafard) Ask Tremblay:4000 to die
> [0] (3:client@Fafard) Done.
> [0] (3:client@Fafard) Exiting GRAS
