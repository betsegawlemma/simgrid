#! ./tesh
p Runs the 'philosopher' test within the simulator

! output sort 28
! setenv GRAS_NO_WARN_EXPERIMENTAL=1
$ $SG_TEST_EXENV ./synchro_simulator${EXEEXT:=} ${srcdir:=.}/../../msg/small_platform.xml ${srcdir:=.}/synchro.xml "--log=root.fmt:[%10.6r]%e(%i:%P@%h)%e%m%n"
> [  0.000000] (1:philosopher@Tremblay) Spawn the 5 threads (10 lunches scheduled)
> [  0.000000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #0)
> [  0.000000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.000000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.000000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.000000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #1)
> [  0.000000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #0)
> [  0.000000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #0)
> [  0.000000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.000000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #0)
> [  0.000000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #0)
> [  0.000000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.020000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.020000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.020000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.030000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.030000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #2)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #3)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #4)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #5)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #6)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #7)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #8)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 gets hungry (lunch #9)
> [  0.040000] (1:thread 0@Tremblay) Thread 0 eats
> [  0.040000] (1:thread 0@Tremblay) Thread 0 is full
> [  0.040000] (1:thread 0@Tremblay) Thread 0 thinks
> [  0.040000] (1:thread 0@Tremblay) Thread 0 tries to enter the dead-end; hopefully, the master will cancel it
> [  0.040000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #1)
> [  0.040000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #1)
> [  0.040000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.040000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.040000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.060000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.060000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.060000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.060000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.070000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.070000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.080000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #2)
> [  0.080000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.080000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #2)
> [  0.080000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #1)
> [  0.090000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.090000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.090000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.090000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.090000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.090000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.100000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #3)
> [  0.110000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.110000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.110000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.120000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.120000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.120000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #1)
> [  0.130000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #4)
> [  0.130000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.130000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #3)
> [  0.130000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.130000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.130000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.140000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.140000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.150000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #5)
> [  0.150000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.160000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.160000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.160000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.160000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.160000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.170000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #6)
> [  0.170000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #2)
> [  0.170000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.180000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.180000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.180000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.190000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.190000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.190000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #2)
> [  0.200000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #7)
> [  0.200000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #4)
> [  0.200000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.210000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.210000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.220000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.220000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.220000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.220000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.230000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.230000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.240000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #8)
> [  0.240000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.240000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #5)
> [  0.250000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.250000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.250000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.250000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.250000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.250000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #3)
> [  0.250000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.260000] (1:thread 1@Tremblay) Thread 1 gets hungry (lunch #9)
> [  0.270000] (1:thread 1@Tremblay) Thread 1 eats
> [  0.270000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.270000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.280000] (1:thread 1@Tremblay) Thread 1 is full
> [  0.280000] (1:thread 1@Tremblay) Thread 1 thinks
> [  0.280000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #3)
> [  0.290000] (1:thread 1@Tremblay) Thread 1 tries to enter the dead-end; hopefully, the master will cancel it
> [  0.290000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #6)
> [  0.290000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.290000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.290000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.310000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.310000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.310000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.330000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #7)
> [  0.330000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #4)
> [  0.340000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.340000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.340000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.340000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.360000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.360000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.370000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #4)
> [  0.380000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #8)
> [  0.380000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.380000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.380000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.400000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.400000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.400000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.420000] (1:thread 2@Tremblay) Thread 2 gets hungry (lunch #9)
> [  0.420000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #5)
> [  0.430000] (1:thread 2@Tremblay) Thread 2 eats
> [  0.430000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.430000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.430000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.450000] (1:thread 2@Tremblay) Thread 2 is full
> [  0.450000] (1:thread 2@Tremblay) Thread 2 thinks
> [  0.460000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #5)
> [  0.470000] (1:thread 2@Tremblay) Thread 2 tries to enter the dead-end; hopefully, the master will cancel it
> [  0.470000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.470000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.470000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.500000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.500000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.510000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #6)
> [  0.510000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.530000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #6)
> [  0.550000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.550000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.550000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.580000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.580000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.590000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #7)
> [  0.590000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.610000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #7)
> [  0.630000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.630000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.630000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.660000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.660000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.670000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #8)
> [  0.670000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.690000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #8)
> [  0.710000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.710000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.710000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.740000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.740000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.750000] (1:thread 4@Tremblay) Thread 4 gets hungry (lunch #9)
> [  0.750000] (1:thread 4@Tremblay) Thread 4 eats
> [  0.770000] (1:thread 3@Tremblay) Thread 3 gets hungry (lunch #9)
> [  0.790000] (1:thread 3@Tremblay) Thread 3 eats
> [  0.790000] (1:thread 4@Tremblay) Thread 4 is full
> [  0.790000] (1:thread 4@Tremblay) Thread 4 thinks
> [  0.820000] (1:thread 3@Tremblay) Thread 3 is full
> [  0.820000] (1:thread 3@Tremblay) Thread 3 thinks
> [  0.830000] (1:thread 4@Tremblay) Thread 4 tries to enter the dead-end; hopefully, the master will cancel it
> [  0.850000] (1:philosopher@Tremblay) Cancel all childs
> [  0.850000] (1:philosopher@Tremblay) Exiting GRAS
> [  0.850000] (1:thread 3@Tremblay) Thread 3 tries to enter the dead-end; hopefully, the master will cancel it
