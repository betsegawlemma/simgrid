p Runs the 'properties' test within the simulator (simulation times valid for 32bits architectures)

! output sort
$ $SG_TEST_EXENV ./properties_simulator${EXEEXT:=} ${srcdir:=.}/../../platforms/prop.xml ${srcdir:=.}/properties.xml "--log=root.fmt:[%10.6r]%e(%i:%P@%h)%e%m%n"
> [  0.000000] (2:bob@host1) == Dump all the properties of host1
> [  0.000000] (2:bob@host1)   Host property: 'SG_TEST_Hdd' has value: '180'
> [  0.000000] (2:bob@host1)   Host property: 'SG_TEST_mem' has value: '4'
> [  0.000000] (2:bob@host1) == Try to get a property that does not exist
> [  0.000000] (2:bob@host1) == Set a host property that alice will try to retrieve in SG (from bob->hello)
> [  0.000000] (2:bob@host1) == Dump all the properties of host1 again to check the addition
> [  0.000000] (2:bob@host1)   Host property: 'from bob' has value: 'hello'
> [  0.000000] (2:bob@host1)   Host property: 'SG_TEST_Hdd' has value: '180'
> [  0.000000] (2:bob@host1)   Host property: 'SG_TEST_mem' has value: '4'
> [  1.000000] (1:alice@host1) == Dump all the properties of current host
> [  1.000000] (1:alice@host1)   Host property: 'from bob' has value: 'hello'
> [  1.000000] (1:alice@host1)   Host property: 'SG_TEST_Hdd' has value: '180'
> [  1.000000] (1:alice@host1)   Host property: 'SG_TEST_mem' has value: '4'
> [  1.000000] (1:alice@host1) == Dump all the properties of alice
> [  1.000000] (1:alice@host1)   Process property: 'SG_TEST_blah' has value: 'blah'
> [  1.000000] (1:alice@host1) == Try to get a process property that does not exist
> [  1.000000] (1:alice@host1) == Trying to modify a process property
> [  1.000000] (1:alice@host1) Exiting GRAS
> [  1.000000] (2:bob@host1) Exiting GRAS
