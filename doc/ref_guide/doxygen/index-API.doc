This file was generated by tools/doxygen/index_create.pl. DO NOT EDIT.

/** \defgroup API_index Full Index
  * \brief The alphabetical list of all functions, macros and types 
  *  defined by SimGrid
  *
  * List of all functions, variables, defines, enums, and typedefs with
  * links to the files they belong to. 
  *
  * \htmlonly Altough completely useless, the complete list of structures defined can be found <a href="annotated.html">here</a> \endhtmlonly


<h2>define</h2> 
  <ul>
	<LI> #CATCH</LI>
	<LI> #CATCH_ANONYMOUS</LI>
	<LI> #GRAS_BENCH_ALWAYS_BEGIN</LI>
	<LI> #GRAS_BENCH_ALWAYS_END</LI>
	<LI> #GRAS_BENCH_ONCE_RUN_ALWAYS_BEGIN</LI>
	<LI> #GRAS_BENCH_ONCE_RUN_ALWAYS_END</LI>
	<LI> #GRAS_BENCH_ONCE_RUN_ONCE_BEGIN</LI>
	<LI> #GRAS_BENCH_ONCE_RUN_ONCE_END</LI>
	<LI> #MSG_TASK_UNINITIALIZED</LI>
	<LI> #RETHROW</LI>
	<LI> #RETHROWF</LI>
	<LI> #SD_SCHED_NO_COST</LI>
	<LI> #THROW</LI>
	<LI> #THROWF</LI>
	<LI> #THROW_PREPARE</LI>
	<LI> #TRY</LI>
	<LI> #TRY_CLEANUP</LI>
	<LI> #XBT_ANNOTE</LI>
	<LI> #XBT_CCRITICAL</LI>
	<LI> #XBT_CDEBUG</LI>
	<LI> #XBT_CERROR</LI>
	<LI> #XBT_CINFO</LI>
	<LI> #XBT_CRITICAL</LI>
	<LI> #XBT_CVERB</LI>
	<LI> #XBT_CWARN</LI>
	<LI> #XBT_DEBUG</LI>
	<LI> #XBT_DEFINE_TYPE</LI>
	<LI> #XBT_DEFINE_TYPE_EXTERN</LI>
	<LI> #XBT_DEFINE_TYPE_LOCAL</LI>
	<LI> #XBT_ERROR</LI>
	<LI> #XBT_HERE</LI>
	<LI> #XBT_IN</LI>
	<LI> #XBT_INFO</LI>
	<LI> #XBT_LOG_DEFAULT_CATEGORY</LI>
	<LI> #XBT_LOG_EXTERNAL_CATEGORY</LI>
	<LI> #XBT_LOG_EXTERNAL_DEFAULT_CATEGORY</LI>
	<LI> #XBT_LOG_ISENABLED</LI>
	<LI> #XBT_LOG_NEW_CATEGORY</LI>
	<LI> #XBT_LOG_NEW_DEFAULT_CATEGORY</LI>
	<LI> #XBT_LOG_NEW_DEFAULT_SUBCATEGORY</LI>
	<LI> #XBT_LOG_NEW_SUBCATEGORY</LI>
	<LI> #XBT_LOG_STATIC_THRESHOLD</LI>
	<LI> #XBT_OUT</LI>
	<LI> #XBT_VERB</LI>
	<LI> #XBT_WARN</LI>
	<LI> #gras_cb_register</LI>
	<LI> #gras_cb_unregister</LI>
	<LI> #gras_msg_rpc_async_call</LI>
	<LI> #gras_msg_rpccall</LI>
	<LI> #gras_msg_send</LI>
	<LI> #gras_msg_wait</LI>
	<LI> #gras_os_sleep</LI>
	<LI> #gras_os_time</LI>
	<LI> #gras_userdata_new</LI>
	<LI> #xbt_abort</LI>
	<LI> #xbt_assert</LI>
	<LI> #xbt_datadesc_by_symbol</LI>
	<LI> #xbt_dict_foreach</LI>
	<LI> #xbt_die</LI>
	<LI> #xbt_dynar_foreach</LI>
	<LI> #xbt_dynar_get_as</LI>
	<LI> #xbt_dynar_getfirst_as</LI>
	<LI> #xbt_dynar_getlast_as</LI>
	<LI> #xbt_dynar_insert_at_as</LI>
	<LI> #xbt_dynar_pop_as</LI>
	<LI> #xbt_dynar_push_as</LI>
	<LI> #xbt_dynar_set_as</LI>
	<LI> #xbt_fifo_foreach</LI>
	<LI> #xbt_new</LI>
	<LI> #xbt_new0</LI>
	<LI> #xbt_set_foreach</LI>
	<LI> #xbt_swag_foreach</LI>
	<LI> #xbt_swag_foreach_safe</LI>
	<LI> #xbt_swag_insert</LI>
	<LI> #xbt_swag_offset</LI>
	<LI> #xbt_swag_reset</LI>

  </ul>
<h2>enumeration</h2> 
  <ul>
	<LI> #MSG_error_t</LI>
	<LI> #e_SD_task_kind_t</LI>
	<LI> #e_SD_task_state_t</LI>
	<LI> #e_SD_workstation_access_mode_t</LI>
	<LI> #e_gras_msg_kind_t</LI>
	<LI> #e_surf_action_state_t</LI>
	<LI> #e_xbt_cfgelm_type_t</LI>
	<LI> #e_xbt_log_priority_t</LI>
	<LI> #e_xbt_parmap_mode_t</LI>
	<LI> #xbt_errcat_t</LI>

  </ul>
<h2>enumvalue</h2> 
  <ul>
	<LI> #MSG_HOST_FAILURE</LI>
	<LI> #MSG_OK</LI>
	<LI> #MSG_TASK_CANCELED</LI>
	<LI> #MSG_TIMEOUT</LI>
	<LI> #MSG_TRANSFER_FAILURE</LI>
	<LI> #SD_DONE</LI>
	<LI> #SD_FAILED</LI>
	<LI> #SD_IN_FIFO</LI>
	<LI> #SD_NOT_SCHEDULED</LI>
	<LI> #SD_RUNNABLE</LI>
	<LI> #SD_RUNNING</LI>
	<LI> #SD_SCHEDULABLE</LI>
	<LI> #SD_SCHEDULED</LI>
	<LI> #SD_TASK_COMM_E2E</LI>
	<LI> #SD_TASK_COMP_PAR_AMDAHL</LI>
	<LI> #SD_TASK_COMP_SEQ</LI>
	<LI> #SD_TASK_NOT_TYPED</LI>
	<LI> #SD_WORKSTATION_SEQUENTIAL_ACCESS</LI>
	<LI> #SD_WORKSTATION_SHARED_ACCESS</LI>
	<LI> #SURF_ACTION_DONE</LI>
	<LI> #SURF_ACTION_FAILED</LI>
	<LI> #SURF_ACTION_NOT_IN_THE_SYSTEM</LI>
	<LI> #SURF_ACTION_READY</LI>
	<LI> #SURF_ACTION_RUNNING</LI>
	<LI> #SURF_ACTION_TO_FREE</LI>
	<LI> #XBT_PARMAP_BUSY_WAIT</LI>
	<LI> #XBT_PARMAP_DEFAULT</LI>
	<LI> #XBT_PARMAP_FUTEX</LI>
	<LI> #XBT_PARMAP_POSIX</LI>
	<LI> #arg_error</LI>
	<LI> #bound_error</LI>
	<LI> #cancel_error</LI>
	<LI> #e_gras_msg_kind_oneway</LI>
	<LI> #e_gras_msg_kind_rpcanswer</LI>
	<LI> #e_gras_msg_kind_rpccall</LI>
	<LI> #e_gras_msg_kind_rpcerror</LI>
	<LI> #host_error</LI>
	<LI> #io_error</LI>
	<LI> #mismatch_error</LI>
	<LI> #network_error</LI>
	<LI> #not_found_error</LI>
	<LI> #system_error</LI>
	<LI> #thread_error</LI>
	<LI> #timeout_error</LI>
	<LI> #tracing_error</LI>
	<LI> #unknown_error</LI>
	<LI> #xbt_cfgelm_double</LI>
	<LI> #xbt_cfgelm_int</LI>
	<LI> #xbt_cfgelm_peer</LI>
	<LI> #xbt_cfgelm_string</LI>
	<LI> #xbt_log_priority_critical</LI>
	<LI> #xbt_log_priority_debug</LI>
	<LI> #xbt_log_priority_error</LI>
	<LI> #xbt_log_priority_infinite</LI>
	<LI> #xbt_log_priority_info</LI>
	<LI> #xbt_log_priority_trace</LI>
	<LI> #xbt_log_priority_verbose</LI>
	<LI> #xbt_log_priority_warning</LI>

  </ul>
<h2>function</h2> 
  <ul>
	<LI> MSG_action_trace_run()</LI>
	<LI> MSG_clean()</LI>
	<LI> MSG_comm_destroy()</LI>
	<LI> MSG_comm_get_status()</LI>
	<LI> MSG_comm_get_task()</LI>
	<LI> MSG_comm_test()</LI>
	<LI> MSG_comm_testany()</LI>
	<LI> MSG_comm_wait()</LI>
	<LI> MSG_comm_waitall()</LI>
	<LI> MSG_comm_waitany()</LI>
	<LI> MSG_create_environment()</LI>
	<LI> MSG_file_close()</LI>
	<LI> MSG_file_open()</LI>
	<LI> MSG_file_read()</LI>
	<LI> MSG_file_stat()</LI>
	<LI> MSG_file_write()</LI>
	<LI> MSG_function_register()</LI>
	<LI> MSG_function_register_default()</LI>
	<LI> MSG_get_clock()</LI>
	<LI> MSG_get_errno()</LI>
	<LI> MSG_get_host_msgload()</LI>
	<LI> MSG_get_host_speed()</LI>
	<LI> MSG_get_registered_function()</LI>
	<LI> MSG_global_init()</LI>
	<LI> MSG_global_init_args()</LI>
	<LI> MSG_gpu_task_create()</LI>
	<LI> MSG_host_get_data()</LI>
	<LI> MSG_host_get_name()</LI>
	<LI> MSG_host_get_properties()</LI>
	<LI> MSG_host_get_property_value()</LI>
	<LI> MSG_host_self()</LI>
	<LI> MSG_host_set_data()</LI>
	<LI> MSG_host_set_property_value()</LI>
	<LI> MSG_hosts_as_dynar()</LI>
	<LI> MSG_launch_application()</LI>
	<LI> MSG_load_platform_script()</LI>
	<LI> MSG_main()</LI>
	<LI> MSG_parallel_task_create()</LI>
	<LI> MSG_parallel_task_execute()</LI>
	<LI> MSG_process_create()</LI>
	<LI> MSG_process_create_with_arguments()</LI>
	<LI> MSG_process_create_with_environment()</LI>
	<LI> MSG_process_from_PID()</LI>
	<LI> MSG_process_get_PID()</LI>
	<LI> MSG_process_get_PPID()</LI>
	<LI> MSG_process_get_data()</LI>
	<LI> MSG_process_get_host()</LI>
	<LI> MSG_process_get_name()</LI>
	<LI> MSG_process_get_properties()</LI>
	<LI> MSG_process_get_property_value()</LI>
	<LI> MSG_process_is_suspended()</LI>
	<LI> MSG_process_kill()</LI>
	<LI> MSG_process_killall()</LI>
	<LI> MSG_process_migrate()</LI>
	<LI> MSG_process_resume()</LI>
	<LI> MSG_process_self()</LI>
	<LI> MSG_process_self_PID()</LI>
	<LI> MSG_process_self_PPID()</LI>
	<LI> MSG_process_set_data()</LI>
	<LI> MSG_process_set_data_cleanup()</LI>
	<LI> MSG_process_set_kill_time()</LI>
	<LI> MSG_process_sleep()</LI>
	<LI> MSG_process_suspend()</LI>
	<LI> MSG_task_Iprobe()</LI>
	<LI> MSG_task_create()</LI>
	<LI> MSG_task_destroy()</LI>
	<LI> MSG_task_dsend()</LI>
	<LI> MSG_task_execute()</LI>
	<LI> MSG_task_get()</LI>
	<LI> MSG_task_get_category()</LI>
	<LI> MSG_task_get_compute_duration()</LI>
	<LI> MSG_task_get_data()</LI>
	<LI> MSG_task_get_data_size()</LI>
	<LI> MSG_task_get_from_host()</LI>
	<LI> MSG_task_get_name()</LI>
	<LI> MSG_task_get_remaining_communication()</LI>
	<LI> MSG_task_get_remaining_computation()</LI>
	<LI> MSG_task_get_sender()</LI>
	<LI> MSG_task_get_source()</LI>
	<LI> MSG_task_get_with_timeout()</LI>
	<LI> MSG_task_irecv()</LI>
	<LI> MSG_task_isend()</LI>
	<LI> MSG_task_isend_with_matching()</LI>
	<LI> MSG_task_listen()</LI>
	<LI> MSG_task_listen_from()</LI>
	<LI> MSG_task_listen_from_host()</LI>
	<LI> MSG_task_probe_from()</LI>
	<LI> MSG_task_probe_from_host()</LI>
	<LI> MSG_task_put()</LI>
	<LI> MSG_task_put_bounded()</LI>
	<LI> MSG_task_put_with_timeout()</LI>
	<LI> MSG_task_receive()</LI>
	<LI> MSG_task_receive_ext()</LI>
	<LI> MSG_task_receive_from_host()</LI>
	<LI> MSG_task_receive_with_timeout()</LI>
	<LI> MSG_task_send()</LI>
	<LI> MSG_task_send_bounded()</LI>
	<LI> MSG_task_send_with_timeout()</LI>
	<LI> MSG_task_set_category()</LI>
	<LI> MSG_task_set_compute_duration()</LI>
	<LI> MSG_task_set_copy_callback()</LI>
	<LI> MSG_task_set_data()</LI>
	<LI> MSG_task_set_name()</LI>
	<LI> MSG_task_set_priority()</LI>
	<LI> MSG_vm_bind()</LI>
	<LI> MSG_vm_destroy()</LI>
	<LI> MSG_vm_is_running()</LI>
	<LI> MSG_vm_is_suspended()</LI>
	<LI> MSG_vm_migrate()</LI>
	<LI> MSG_vm_resume()</LI>
	<LI> MSG_vm_shutdown()</LI>
	<LI> MSG_vm_start()</LI>
	<LI> MSG_vm_suspend()</LI>
	<LI> MSG_vm_unbind()</LI>
	<LI> MSG_vms_as_dynar()</LI>
	<LI> SD_application_reinit()</LI>
	<LI> SD_create_environment()</LI>
	<LI> SD_daxload()</LI>
	<LI> SD_dotload()</LI>
	<LI> SD_exit()</LI>
	<LI> SD_get_clock()</LI>
	<LI> SD_init()</LI>
	<LI> SD_link_get_current_bandwidth()</LI>
	<LI> SD_link_get_current_latency()</LI>
	<LI> SD_link_get_data()</LI>
	<LI> SD_link_get_list()</LI>
	<LI> SD_link_get_name()</LI>
	<LI> SD_link_get_number()</LI>
	<LI> SD_link_get_sharing_policy()</LI>
	<LI> SD_link_set_data()</LI>
	<LI> SD_load_environment_script()</LI>
	<LI> SD_route_get_communication_time()</LI>
	<LI> SD_route_get_current_bandwidth()</LI>
	<LI> SD_route_get_current_latency()</LI>
	<LI> SD_route_get_list()</LI>
	<LI> SD_route_get_size()</LI>
	<LI> SD_simulate()</LI>
	<LI> SD_task_create()</LI>
	<LI> SD_task_create_comm_e2e()</LI>
	<LI> SD_task_create_comp_par_amdahl()</LI>
	<LI> SD_task_create_comp_seq()</LI>
	<LI> SD_task_dependency_add()</LI>
	<LI> SD_task_dependency_exists()</LI>
	<LI> SD_task_dependency_get_data()</LI>
	<LI> SD_task_dependency_remove()</LI>
	<LI> SD_task_destroy()</LI>
	<LI> SD_task_distribute_comp_amdhal()</LI>
	<LI> SD_task_dotty()</LI>
	<LI> SD_task_dump()</LI>
	<LI> SD_task_get_amount()</LI>
	<LI> SD_task_get_category()</LI>
	<LI> SD_task_get_children()</LI>
	<LI> SD_task_get_data()</LI>
	<LI> SD_task_get_execution_time()</LI>
	<LI> SD_task_get_finish_time()</LI>
	<LI> SD_task_get_name()</LI>
	<LI> SD_task_get_parents()</LI>
	<LI> SD_task_get_remaining_amount()</LI>
	<LI> SD_task_get_start_time()</LI>
	<LI> SD_task_get_state()</LI>
	<LI> SD_task_get_workstation_count()</LI>
	<LI> SD_task_get_workstation_list()</LI>
	<LI> SD_task_schedule()</LI>
	<LI> SD_task_schedulel()</LI>
	<LI> SD_task_schedulev()</LI>
	<LI> SD_task_set_category()</LI>
	<LI> SD_task_set_data()</LI>
	<LI> SD_task_set_name()</LI>
	<LI> SD_task_set_rate()</LI>
	<LI> SD_task_unschedule()</LI>
	<LI> SD_task_unwatch()</LI>
	<LI> SD_task_watch()</LI>
	<LI> SD_workstation_dump()</LI>
	<LI> SD_workstation_get_access_mode()</LI>
	<LI> SD_workstation_get_available_power()</LI>
	<LI> SD_workstation_get_by_name()</LI>
	<LI> SD_workstation_get_computation_time()</LI>
	<LI> SD_workstation_get_current_task()</LI>
	<LI> SD_workstation_get_data()</LI>
	<LI> SD_workstation_get_list()</LI>
	<LI> SD_workstation_get_name()</LI>
	<LI> SD_workstation_get_number()</LI>
	<LI> SD_workstation_get_power()</LI>
	<LI> SD_workstation_get_properties()</LI>
	<LI> SD_workstation_get_property_value()</LI>
	<LI> SD_workstation_set_access_mode()</LI>
	<LI> SD_workstation_set_data()</LI>
	<LI> SIMIX_clean()</LI>
	<LI> SIMIX_get_clock()</LI>
	<LI> SIMIX_global_init()</LI>
	<LI> SIMIX_run()</LI>
	<LI> TRACE_category()</LI>
	<LI> TRACE_category_with_color()</LI>
	<LI> TRACE_declare_mark()</LI>
	<LI> TRACE_declare_mark_value()</LI>
	<LI> TRACE_get_categories()</LI>
	<LI> TRACE_get_edge_types()</LI>
	<LI> TRACE_get_host_variables()</LI>
	<LI> TRACE_get_link_variables()</LI>
	<LI> TRACE_get_marks()</LI>
	<LI> TRACE_get_node_types()</LI>
	<LI> TRACE_host_pop_state()</LI>
	<LI> TRACE_host_push_state()</LI>
	<LI> TRACE_host_reset_state()</LI>
	<LI> TRACE_host_set_state()</LI>
	<LI> TRACE_host_state_declare()</LI>
	<LI> TRACE_host_state_declare_value()</LI>
	<LI> TRACE_host_variable_add()</LI>
	<LI> TRACE_host_variable_add_with_time()</LI>
	<LI> TRACE_host_variable_declare()</LI>
	<LI> TRACE_host_variable_declare_with_color()</LI>
	<LI> TRACE_host_variable_set()</LI>
	<LI> TRACE_host_variable_set_with_time()</LI>
	<LI> TRACE_host_variable_sub()</LI>
	<LI> TRACE_host_variable_sub_with_time()</LI>
	<LI> TRACE_link_srcdst_variable_add()</LI>
	<LI> TRACE_link_srcdst_variable_add_with_time()</LI>
	<LI> TRACE_link_srcdst_variable_set()</LI>
	<LI> TRACE_link_srcdst_variable_set_with_time()</LI>
	<LI> TRACE_link_srcdst_variable_sub()</LI>
	<LI> TRACE_link_srcdst_variable_sub_with_time()</LI>
	<LI> TRACE_link_variable_add()</LI>
	<LI> TRACE_link_variable_add_with_time()</LI>
	<LI> TRACE_link_variable_declare()</LI>
	<LI> TRACE_link_variable_declare_with_color()</LI>
	<LI> TRACE_link_variable_set()</LI>
	<LI> TRACE_link_variable_set_with_time()</LI>
	<LI> TRACE_link_variable_sub()</LI>
	<LI> TRACE_link_variable_sub_with_time()</LI>
	<LI> TRACE_mark()</LI>
	<LI> TRACE_platform_graph_export_graphviz()</LI>
	<LI> __MSG_host_destroy()</LI>
	<LI> __attribute__()</LI>
	<LI> amok_bw_exit()</LI>
	<LI> amok_bw_init()</LI>
	<LI> amok_bw_matrix()</LI>
	<LI> amok_bw_request()</LI>
	<LI> amok_bw_saturate_begin()</LI>
	<LI> amok_bw_saturate_start()</LI>
	<LI> amok_bw_saturate_stop()</LI>
	<LI> amok_bw_test()</LI>
	<LI> amok_pm_exit()</LI>
	<LI> amok_pm_group_get()</LI>
	<LI> amok_pm_group_join()</LI>
	<LI> amok_pm_group_leave()</LI>
	<LI> amok_pm_group_new()</LI>
	<LI> amok_pm_group_shutdown()</LI>
	<LI> amok_pm_group_shutdown_remote()</LI>
	<LI> amok_pm_init()</LI>
	<LI> amok_pm_kill()</LI>
	<LI> amok_pm_kill_hp()</LI>
	<LI> amok_pm_kill_sync()</LI>
	<LI> amok_pm_mainloop()</LI>
	<LI> gras_agent_spawn()</LI>
	<LI> gras_cb_register_()</LI>
	<LI> gras_cb_unregister_()</LI>
	<LI> gras_exit()</LI>
	<LI> gras_if_RL()</LI>
	<LI> gras_if_SG()</LI>
	<LI> gras_init()</LI>
	<LI> gras_msg_cb_ctx_from()</LI>
	<LI> gras_msg_handle()</LI>
	<LI> gras_msg_handleall()</LI>
	<LI> gras_msg_rpc_async_call_()</LI>
	<LI> gras_msg_rpc_async_wait()</LI>
	<LI> gras_msg_rpccall_()</LI>
	<LI> gras_msg_rpcreturn()</LI>
	<LI> gras_msg_send_()</LI>
	<LI> gras_msg_wait_()</LI>
	<LI> gras_msg_wait_ext_()</LI>
	<LI> gras_msg_wait_or()</LI>
	<LI> gras_msgtype_by_id()</LI>
	<LI> gras_msgtype_by_name()</LI>
	<LI> gras_msgtype_by_name_or_null()</LI>
	<LI> gras_msgtype_by_namev()</LI>
	<LI> gras_msgtype_declare()</LI>
	<LI> gras_msgtype_declare_rpc()</LI>
	<LI> gras_msgtype_declare_rpc_v()</LI>
	<LI> gras_msgtype_declare_v()</LI>
	<LI> gras_msgtype_dumpall()</LI>
	<LI> gras_os_getpid()</LI>
	<LI> gras_os_host_properties()</LI>
	<LI> gras_os_host_property_value()</LI>
	<LI> gras_os_hostport()</LI>
	<LI> gras_os_myname()</LI>
	<LI> gras_os_myport()</LI>
	<LI> gras_process_properties()</LI>
	<LI> gras_process_property_value()</LI>
	<LI> gras_socket_client()</LI>
	<LI> gras_socket_client_ext()</LI>
	<LI> gras_socket_client_from_file()</LI>
	<LI> gras_socket_client_from_string()</LI>
	<LI> gras_socket_close()</LI>
	<LI> gras_socket_server()</LI>
	<LI> gras_socket_server_ext()</LI>
	<LI> gras_socket_server_from_file()</LI>
	<LI> gras_socket_server_range()</LI>
	<LI> gras_timer_cancel_all()</LI>
	<LI> gras_timer_cancel_delay()</LI>
	<LI> gras_timer_cancel_delay_all()</LI>
	<LI> gras_timer_cancel_repeat()</LI>
	<LI> gras_timer_cancel_repeat_all()</LI>
	<LI> gras_timer_delay()</LI>
	<LI> gras_timer_repeat()</LI>
	<LI> gras_userdata_get()</LI>
	<LI> gras_userdata_set()</LI>
	<LI> simcall_process_get_properties()</LI>
	<LI> surf_exit()</LI>
	<LI> surf_get_clock()</LI>
	<LI> surf_init()</LI>
	<LI> surf_presolve()</LI>
	<LI> surf_solve()</LI>
	<LI> xbt_backtrace_current()</LI>
	<LI> xbt_backtrace_display()</LI>
	<LI> xbt_backtrace_display_current()</LI>
	<LI> xbt_backtrace_no_malloc()</LI>
	<LI> xbt_cbps_block_begin()</LI>
	<LI> xbt_cbps_block_end()</LI>
	<LI> xbt_cbps_i_pop()</LI>
	<LI> xbt_cbps_i_push()</LI>
	<LI> xbt_cbps_v_get()</LI>
	<LI> xbt_cbps_v_pop()</LI>
	<LI> xbt_cbps_v_push()</LI>
	<LI> xbt_cbps_v_set()</LI>
	<LI> xbt_cfg_check()</LI>
	<LI> xbt_cfg_cpy()</LI>
	<LI> xbt_cfg_dump()</LI>
	<LI> xbt_cfg_empty()</LI>
	<LI> xbt_cfg_free()</LI>
	<LI> xbt_cfg_get_double()</LI>
	<LI> xbt_cfg_get_double_at()</LI>
	<LI> xbt_cfg_get_dynar()</LI>
	<LI> xbt_cfg_get_int()</LI>
	<LI> xbt_cfg_get_int_at()</LI>
	<LI> xbt_cfg_get_peer()</LI>
	<LI> xbt_cfg_get_peer_at()</LI>
	<LI> xbt_cfg_get_string()</LI>
	<LI> xbt_cfg_get_string_at()</LI>
	<LI> xbt_cfg_get_type()</LI>
	<LI> xbt_cfg_help()</LI>
	<LI> xbt_cfg_new()</LI>
	<LI> xbt_cfg_register()</LI>
	<LI> xbt_cfg_register_str()</LI>
	<LI> xbt_cfg_rm_at()</LI>
	<LI> xbt_cfg_rm_double()</LI>
	<LI> xbt_cfg_rm_int()</LI>
	<LI> xbt_cfg_rm_peer()</LI>
	<LI> xbt_cfg_rm_string()</LI>
	<LI> xbt_cfg_set()</LI>
	<LI> xbt_cfg_set_double()</LI>
	<LI> xbt_cfg_set_int()</LI>
	<LI> xbt_cfg_set_parse()</LI>
	<LI> xbt_cfg_set_peer()</LI>
	<LI> xbt_cfg_set_string()</LI>
	<LI> xbt_cfg_set_vargs()</LI>
	<LI> xbt_cfg_setdefault_double()</LI>
	<LI> xbt_cfg_setdefault_int()</LI>
	<LI> xbt_cfg_setdefault_peer()</LI>
	<LI> xbt_cfg_setdefault_string()</LI>
	<LI> xbt_cfg_unregister()</LI>
	<LI> xbt_cond_broadcast()</LI>
	<LI> xbt_cond_destroy()</LI>
	<LI> xbt_cond_init()</LI>
	<LI> xbt_cond_signal()</LI>
	<LI> xbt_cond_timedwait()</LI>
	<LI> xbt_cond_wait()</LI>
	<LI> xbt_datadesc_array_dyn()</LI>
	<LI> xbt_datadesc_array_fixed()</LI>
	<LI> xbt_datadesc_by_name()</LI>
	<LI> xbt_datadesc_by_name_or_null()</LI>
	<LI> xbt_datadesc_cb_field_push()</LI>
	<LI> xbt_datadesc_cb_field_push_multiplier()</LI>
	<LI> xbt_datadesc_cb_field_recv()</LI>
	<LI> xbt_datadesc_cb_field_send()</LI>
	<LI> xbt_datadesc_cb_pop()</LI>
	<LI> xbt_datadesc_cb_push_int()</LI>
	<LI> xbt_datadesc_cb_push_int_mult()</LI>
	<LI> xbt_datadesc_cb_push_lint()</LI>
	<LI> xbt_datadesc_cb_push_lint_mult()</LI>
	<LI> xbt_datadesc_cb_push_uint()</LI>
	<LI> xbt_datadesc_cb_push_uint_mult()</LI>
	<LI> xbt_datadesc_cb_push_ulint()</LI>
	<LI> xbt_datadesc_cb_push_ulint_mult()</LI>
	<LI> xbt_datadesc_cb_recv()</LI>
	<LI> xbt_datadesc_cb_send()</LI>
	<LI> xbt_datadesc_copy()</LI>
	<LI> xbt_datadesc_cycle_set()</LI>
	<LI> xbt_datadesc_cycle_unset()</LI>
	<LI> xbt_datadesc_dynar()</LI>
	<LI> xbt_datadesc_get_id()</LI>
	<LI> xbt_datadesc_get_name()</LI>
	<LI> xbt_datadesc_ref()</LI>
	<LI> xbt_datadesc_ref_generic()</LI>
	<LI> xbt_datadesc_ref_pop_arr()</LI>
	<LI> xbt_datadesc_set_const()</LI>
	<LI> xbt_datadesc_struct()</LI>
	<LI> xbt_datadesc_struct_append()</LI>
	<LI> xbt_datadesc_struct_close()</LI>
	<LI> xbt_datadesc_union()</LI>
	<LI> xbt_datadesc_union_append()</LI>
	<LI> xbt_datadesc_union_close()</LI>
	<LI> xbt_dict_cursor_first()</LI>
	<LI> xbt_dict_cursor_free()</LI>
	<LI> xbt_dict_cursor_get_data()</LI>
	<LI> xbt_dict_cursor_get_key()</LI>
	<LI> xbt_dict_cursor_get_or_free()</LI>
	<LI> xbt_dict_cursor_new()</LI>
	<LI> xbt_dict_cursor_rewind()</LI>
	<LI> xbt_dict_cursor_set_data()</LI>
	<LI> xbt_dict_cursor_step()</LI>
	<LI> xbt_dict_dump()</LI>
	<LI> xbt_dict_dump_output_string()</LI>
	<LI> xbt_dict_dump_sizes()</LI>
	<LI> xbt_dict_free()</LI>
	<LI> xbt_dict_get()</LI>
	<LI> xbt_dict_get_ext()</LI>
	<LI> xbt_dict_get_key()</LI>
	<LI> xbt_dict_get_or_null()</LI>
	<LI> xbt_dict_get_or_null_ext()</LI>
	<LI> xbt_dict_is_empty()</LI>
	<LI> xbt_dict_length()</LI>
	<LI> xbt_dict_new()</LI>
	<LI> xbt_dict_new_homogeneous()</LI>
	<LI> xbt_dict_remove()</LI>
	<LI> xbt_dict_remove_ext()</LI>
	<LI> xbt_dict_reset()</LI>
	<LI> xbt_dict_set()</LI>
	<LI> xbt_dict_set_ext()</LI>
	<LI> xbt_dict_size()</LI>
	<LI> xbt_dynar_cursor_rm()</LI>
	<LI> xbt_dynar_cursor_unlock()</LI>
	<LI> xbt_dynar_free()</LI>
	<LI> xbt_dynar_free_container()</LI>
	<LI> xbt_dynar_free_voidp()</LI>
	<LI> xbt_dynar_get_cpy()</LI>
	<LI> xbt_dynar_get_ptr()</LI>
	<LI> xbt_dynar_insert_at()</LI>
	<LI> xbt_dynar_insert_at_ptr()</LI>
	<LI> xbt_dynar_is_empty()</LI>
	<LI> xbt_dynar_length()</LI>
	<LI> xbt_dynar_map()</LI>
	<LI> xbt_dynar_member()</LI>
	<LI> xbt_dynar_merge()</LI>
	<LI> xbt_dynar_new()</LI>
	<LI> xbt_dynar_new_sync()</LI>
	<LI> xbt_dynar_pop()</LI>
	<LI> xbt_dynar_pop_ptr()</LI>
	<LI> xbt_dynar_push()</LI>
	<LI> xbt_dynar_push_ptr()</LI>
	<LI> xbt_dynar_remove_at()</LI>
	<LI> xbt_dynar_replace()</LI>
	<LI> xbt_dynar_reset()</LI>
	<LI> xbt_dynar_search()</LI>
	<LI> xbt_dynar_search_or_negative()</LI>
	<LI> xbt_dynar_set()</LI>
	<LI> xbt_dynar_shift()</LI>
	<LI> xbt_dynar_shrink()</LI>
	<LI> xbt_dynar_sort()</LI>
	<LI> xbt_dynar_three_way_partition()</LI>
	<LI> xbt_dynar_to_array()</LI>
	<LI> xbt_dynar_unshift()</LI>
	<LI> xbt_ex_catname()</LI>
	<LI> xbt_ex_free()</LI>
	<LI> xbt_fifo_copy()</LI>
	<LI> xbt_fifo_free()</LI>
	<LI> xbt_fifo_free_item()</LI>
	<LI> xbt_fifo_get_first_item()</LI>
	<LI> xbt_fifo_get_item_content()</LI>
	<LI> xbt_fifo_get_last_item()</LI>
	<LI> xbt_fifo_get_next_item()</LI>
	<LI> xbt_fifo_get_prev_item()</LI>
	<LI> xbt_fifo_is_in()</LI>
	<LI> xbt_fifo_new()</LI>
	<LI> xbt_fifo_new_item()</LI>
	<LI> xbt_fifo_pop()</LI>
	<LI> xbt_fifo_pop_item()</LI>
	<LI> xbt_fifo_push()</LI>
	<LI> xbt_fifo_push_item()</LI>
	<LI> xbt_fifo_remove()</LI>
	<LI> xbt_fifo_remove_all()</LI>
	<LI> xbt_fifo_remove_item()</LI>
	<LI> xbt_fifo_reset()</LI>
	<LI> xbt_fifo_set_item_content()</LI>
	<LI> xbt_fifo_shift()</LI>
	<LI> xbt_fifo_shift_item()</LI>
	<LI> xbt_fifo_size()</LI>
	<LI> xbt_fifo_to_array()</LI>
	<LI> xbt_fifo_unshift()</LI>
	<LI> xbt_fifo_unshift_item()</LI>
	<LI> xbt_free_ref()</LI>
	<LI> xbt_graph_edge_get_data()</LI>
	<LI> xbt_graph_edge_get_length()</LI>
	<LI> xbt_graph_edge_get_source()</LI>
	<LI> xbt_graph_edge_get_target()</LI>
	<LI> xbt_graph_edge_set_data()</LI>
	<LI> xbt_graph_edge_set_length()</LI>
	<LI> xbt_graph_export_graphviz()</LI>
	<LI> xbt_graph_export_graphxml()</LI>
	<LI> xbt_graph_free_edge()</LI>
	<LI> xbt_graph_free_graph()</LI>
	<LI> xbt_graph_free_node()</LI>
	<LI> xbt_graph_get_edge()</LI>
	<LI> xbt_graph_get_edges()</LI>
	<LI> xbt_graph_get_length_matrix()</LI>
	<LI> xbt_graph_get_nodes()</LI>
	<LI> xbt_graph_load()</LI>
	<LI> xbt_graph_new_edge()</LI>
	<LI> xbt_graph_new_graph()</LI>
	<LI> xbt_graph_new_node()</LI>
	<LI> xbt_graph_node_get_data()</LI>
	<LI> xbt_graph_node_get_outedges()</LI>
	<LI> xbt_graph_node_set_data()</LI>
	<LI> xbt_graph_save()</LI>
	<LI> xbt_graph_shortest_paths()</LI>
	<LI> xbt_graph_spanning_tree_prim()</LI>
	<LI> xbt_graph_topo_sort()</LI>
	<LI> xbt_heap_free()</LI>
	<LI> xbt_heap_maxcontent()</LI>
	<LI> xbt_heap_maxkey()</LI>
	<LI> xbt_heap_new()</LI>
	<LI> xbt_heap_pop()</LI>
	<LI> xbt_heap_push()</LI>
	<LI> xbt_heap_remove()</LI>
	<LI> xbt_heap_set_update_callback()</LI>
	<LI> xbt_heap_size()</LI>
	<LI> xbt_log_control_set()</LI>
	<LI> xbt_mallocator_free()</LI>
	<LI> xbt_mallocator_get()</LI>
	<LI> xbt_mallocator_new()</LI>
	<LI> xbt_mallocator_release()</LI>
	<LI> xbt_mutex_acquire()</LI>
	<LI> xbt_mutex_destroy()</LI>
	<LI> xbt_mutex_init()</LI>
	<LI> xbt_mutex_release()</LI>
	<LI> xbt_mutex_timedacquire()</LI>
	<LI> xbt_os_get_numcores()</LI>
	<LI> xbt_parmap_apply()</LI>
	<LI> xbt_parmap_destroy()</LI>
	<LI> xbt_parmap_new()</LI>
	<LI> xbt_parmap_next()</LI>
	<LI> xbt_peer_copy()</LI>
	<LI> xbt_peer_free()</LI>
	<LI> xbt_peer_free_voidp()</LI>
	<LI> xbt_peer_from_string()</LI>
	<LI> xbt_peer_new()</LI>
	<LI> xbt_queue_free()</LI>
	<LI> xbt_queue_length()</LI>
	<LI> xbt_queue_new()</LI>
	<LI> xbt_queue_pop()</LI>
	<LI> xbt_queue_pop_timed()</LI>
	<LI> xbt_queue_push()</LI>
	<LI> xbt_queue_push_timed()</LI>
	<LI> xbt_queue_shift()</LI>
	<LI> xbt_queue_shift_timed()</LI>
	<LI> xbt_queue_unshift()</LI>
	<LI> xbt_queue_unshift_timed()</LI>
	<LI> xbt_set_add()</LI>
	<LI> xbt_set_cursor_first()</LI>
	<LI> xbt_set_cursor_get_or_free()</LI>
	<LI> xbt_set_cursor_step()</LI>
	<LI> xbt_set_free()</LI>
	<LI> xbt_set_get_by_id()</LI>
	<LI> xbt_set_get_by_name()</LI>
	<LI> xbt_set_get_by_name_ext()</LI>
	<LI> xbt_set_get_by_name_or_null()</LI>
	<LI> xbt_set_length()</LI>
	<LI> xbt_set_new()</LI>
	<LI> xbt_set_remove()</LI>
	<LI> xbt_set_remove_by_id()</LI>
	<LI> xbt_set_remove_by_name()</LI>
	<LI> xbt_set_remove_by_name_ext()</LI>
	<LI> xbt_socket_is_meas()</LI>
	<LI> xbt_socket_meas_accept()</LI>
	<LI> xbt_socket_meas_recv()</LI>
	<LI> xbt_socket_meas_send()</LI>
	<LI> xbt_socket_my_port()</LI>
	<LI> xbt_socket_new()</LI>
	<LI> xbt_socket_new_ext()</LI>
	<LI> xbt_socket_peer_name()</LI>
	<LI> xbt_socket_peer_port()</LI>
	<LI> xbt_socket_peer_proc()</LI>
	<LI> xbt_socket_tcp_client()</LI>
	<LI> xbt_socket_tcp_client_ext()</LI>
	<LI> xbt_socket_tcp_server()</LI>
	<LI> xbt_socket_tcp_server_ext()</LI>
	<LI> xbt_str_diff()</LI>
	<LI> xbt_str_from_file()</LI>
	<LI> xbt_str_hash()</LI>
	<LI> xbt_str_hash_ext()</LI>
	<LI> xbt_str_join()</LI>
	<LI> xbt_str_join_array()</LI>
	<LI> xbt_str_ltrim()</LI>
	<LI> xbt_str_rtrim()</LI>
	<LI> xbt_str_split()</LI>
	<LI> xbt_str_split_quoted()</LI>
	<LI> xbt_str_split_quoted_in_place()</LI>
	<LI> xbt_str_split_str()</LI>
	<LI> xbt_str_strip_spaces()</LI>
	<LI> xbt_str_subst()</LI>
	<LI> xbt_str_trim()</LI>
	<LI> xbt_str_varsubst()</LI>
	<LI> xbt_swag_extract()</LI>
	<LI> xbt_swag_free()</LI>
	<LI> xbt_swag_init()</LI>
	<LI> xbt_swag_insert_at_head()</LI>
	<LI> xbt_swag_insert_at_tail()</LI>
	<LI> xbt_swag_new()</LI>
	<LI> xbt_swag_remove()</LI>
	<LI> xbt_swag_size()</LI>
	<LI> xbt_thread_cancel()</LI>
	<LI> xbt_thread_create()</LI>
	<LI> xbt_thread_exit()</LI>
	<LI> xbt_thread_join()</LI>
	<LI> xbt_thread_name()</LI>
	<LI> xbt_thread_self()</LI>
	<LI> xbt_thread_self_name()</LI>
	<LI> xbt_thread_yield()</LI>

  </ul>
<h2>typedef</h2> 
  <ul>
	<LI> #SD_link_t</LI>
	<LI> #SD_task_t</LI>
	<LI> #SD_workstation_t</LI>
	<LI> #gras_msg_cb_ctx_t</LI>
	<LI> #gras_msg_cb_t</LI>
	<LI> #gras_msgtype_t</LI>
	<LI> #m_gpu_task_t</LI>
	<LI> #m_host_t</LI>
	<LI> #m_process_t</LI>
	<LI> #m_task_t</LI>
	<LI> #msg_comm_t</LI>
	<LI> #msg_file_t</LI>
	<LI> #msg_mailbox_t</LI>
	<LI> #msg_vm_t</LI>
	<LI> #s_surf_action_state_t</LI>
	<LI> #s_surf_action_t</LI>
	<LI> #s_xbt_peer_t</LI>
	<LI> #s_xbt_set_elm_t</LI>
	<LI> #s_xbt_swag_hookup_t</LI>
	<LI> #surf_action_t</LI>
	<LI> #xbt_cbps_t</LI>
	<LI> #xbt_cfg_cb_t</LI>
	<LI> #xbt_cfg_t</LI>
	<LI> #xbt_cond_t</LI>
	<LI> #xbt_datadesc_selector_t</LI>
	<LI> #xbt_datadesc_type_cb_int_t</LI>
	<LI> #xbt_datadesc_type_cb_void_t</LI>
	<LI> #xbt_datadesc_type_t</LI>
	<LI> #xbt_dict_cursor_t</LI>
	<LI> #xbt_dict_t</LI>
	<LI> #xbt_dynar_t</LI>
	<LI> #xbt_fifo_item_t</LI>
	<LI> #xbt_fifo_t</LI>
	<LI> #xbt_mallocator_t</LI>
	<LI> #xbt_mutex_t</LI>
	<LI> #xbt_os_cond_t</LI>
	<LI> #xbt_os_mutex_t</LI>
	<LI> #xbt_os_rmutex_t</LI>
	<LI> #xbt_os_sem_t</LI>
	<LI> #xbt_os_thread_t</LI>
	<LI> #xbt_parmap_t</LI>
	<LI> #xbt_peer_t</LI>
	<LI> #xbt_queue_t</LI>
	<LI> #xbt_set_cursor_t</LI>
	<LI> #xbt_set_t</LI>
	<LI> #xbt_socket_t</LI>
	<LI> #xbt_string_t</LI>
	<LI> #xbt_swag_t</LI>
	<LI> #xbt_thread_t</LI>

  </ul>
*/