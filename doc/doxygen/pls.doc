/*! \page pls Packet level simulation

\tableofcontents

It is possible to use a packet-level network simulator instead of the default flow-based models. You may want to use 
this feature if you have doubts about the validity of the default model or want to perform some validation experiments.

At the moment, we support the well-known <a href="http://www.nsnam.org/"><b>ns-3</b></a> packet-level simulator. Earlier 
releases of SimGrid did support the <b>GTNetS</b> simulator. Its support could possibly be revived by someone who would
need it.

\section pls_simgrid_configuration_ns3 ns-3 as a SimGrid model

This section explains how  to replace the SimGrid network models by those of the well-known 
<a href="http://www.nsnam.org/">ns-3</a> packet-level network simulator.

\subsection pls_simgrid_configuration_ns3_install Installing ns-3

The easiest is to install it with the package manager. Under Debian/Ubuntu, simply type as root:

\verbatim
apt-get install libns3-dev ns3
\endverbatim

You can also install it from scratch with the following commands:

\verbatim
# Download the source
wget http://www.nsnam.org/release/ns-allinone-3.25.tar.bz2
tar -xf ns-allinone-3.25.tar.bz2
cd ns-allinone-3.25/ns-3.25/
# Configure, build and install
./waf configure --prefix="/opt/ns3" # or give another path if you prefer
./waf
./waf install
\endverbatim

For more information, please refer to the ns-3 documentation.

\subsection pls_simgrid_configuration_ns3_config Enabling SimGrid's support for ns-3

Normally, you just have to enable ns-3 in ccmake or cmake as follows. If you installed ns-3 in a regular path, just
drop the ns3_path configuration item.

\verbatim
cmake . -Denable_ns3=ON -DNS3_HINT=/opt/ns3 # or change the path if needed
\endverbatim

By the end of the configuration, cmake reports whether ns-3 was found. You can also double-check by executing the tests
after the compilation.

\verbatim
$ ctest -R ns3
(test(s) should be run)
\endverbatim

If you have a ns-3 version that is not known to SimGrid (yet), the detection may fail. In that case, edit the
tools/cmake/Modules/FindNS3.cmake file in your SimGrid tree. The
required changes are very easy, and documented in the file header.

If the compilation fails when linking the library because of some .a file that cannot be used dynamically, this is 
probably because you only installed the libns3-dev library on your Debian, where you also need libns3-3. This is 
probably a bug of the libns3-dev package that should depend on the dynamic libraries corresponding to its .so files.

\subsection pls_simgrid_configuration_ns3_use Using ns-3 from SimGrid

A working example of ns-3/SimGrid interactions can be found in examples/msg/network-ns3/. Basically, you just have to 
run your SimGrid simulation with the configuration option "network/model" set to "NS3". The rest remains unchanged.

The following should work from the examples/msg/network-ns3 folder (network-ns3 is the name of our example binary).

\verbatim
./network-ns3 ./3hosts_2links_p.xml 3hosts_2links_d.xml --cfg=network/model:NS3 --log=root.threshold:info
\endverbatim

A ns-3 platform is automatically created from the provided SimGrid platform file. However, there are some known caveats:

<ul>
  <li>The default values (e.g., TCP parameters) are the ns3  values. Don't blame us for them.</li>  

  <li>ns-3 networks are routed using the shortest path algorithm, using
   ns3::Ipv4GlobalRoutingHelper::PopulateRoutingTables.</li>

  <li>End hosts cannot have more than one interface card (so, only one &lt;link&gt; in your SimGrid platform should 
   link an end host to the platform ; if not, your end host will be considered as a router.  </li>
</ul>

More about ns-3 simulator <a href="http://www.nsnam.org/">(Official website)</a>

\subsection pls_examples Examples

There is an example in the \c examples/ folder, that shows how to use the bindings. See also the \ref MSG_ex_PLS 
"documentation for this example".

*/
