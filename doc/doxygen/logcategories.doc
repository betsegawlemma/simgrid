/* Generated file, do not edit */
/** \addtogroup XBT_log_cats
        @{
   - amok: All AMOK categories
     - amok_bw: Bandwidth testing
       - amok_bw_sat: Everything concerning the SATuration part of the amok_bw module
     - amok_pm: peer management
   - bindings: All bindings categories
     - lua: Lua Bindings
     - lua_comm: Lua bindings (comm module)
     - lua_host: Lua bindings (host module)
     - lua_platf: Lua bindings (platform module)
     - lua_process: Lua Bindings (process module)
     - lua_state_cloner: Lua state management
     - lua_task: Lua bindings (task module)
     - lua_utils: Lua helper functions
   - graphicator: Graphicator Logging System
   - gras: All GRAS categories (cf. section \ref GRAS_API)
     - gras_modules: Module and moddata handling
     - gras_msg: High level messaging
       - gras_msg_read: Message reader thread
       - gras_msg_rpc: RPC mecanism
     - gras_timer: Delayed and repetitive actions
     - gras_trp: Conveying bytes over the network
       - gras_trp_file: Pseudo-transport to write to/read from a file
       - gras_trp_sg: SimGrid pseudo-transport
     - gras_virtu: Virtualization code
       - gras_virtu_emul: Emulation support
       - gras_virtu_process: Process manipulation code
     - stubgen: Stub generator
   - instr: Logging the behavior of the tracing system (used for Visualization/Analysis of simulations)
     - instr_paje_trace: Paje tracing event system
     - instr_smpi: Tracing SMPI
     - instr_surf: Tracing Surf
   - jedule: Logging specific to Jedule
     - jed_out: Logging specific to Jedule output
     - jed_sd: Logging specific to Jedule SD binding
   - mc: All MC categories
     - mc_checkpoint: Logging specific to mc_checkpoint
     - mc_dpor: Logging specific to MC DPOR exploration
     - mc_global: Logging specific to MC (global)
     - mc_liveness: Logging specific to algorithms for liveness properties verification
     - mc_memory: Logging specific to MC (memory)
     - mc_memory_map: Logging specific to algorithms for memory_map
     - mc_request: Logging specific to MC (request)
   - msg: All MSG categories
     - msg_action: MSG actions for trace driven simulation
     - msg_gos: Logging specific to MSG (gos)
     - msg_io: Logging specific to MSG (io)
     - msg_kernel: Logging specific to MSG (kernel)
     - msg_mailbox: Logging specific to MSG (mailbox)
     - msg_process: Logging specific to MSG (process)
     - msg_task: Logging specific to MSG (task)
     - msg_vm: Cloud-oriented parts of the MSG API
   - sd: Logging specific to SimDag
     - sd_daxparse: Parsing DAX files
     - sd_dotparse: Parsing DOT files
     - sd_kernel: Logging specific to SimDag (kernel)
     - sd_task: Logging specific to SimDag (task)
     - sd_workstation: Logging specific to SimDag (workstation)
   - simix: All SIMIX categories
     - simix_context: Context switching mechanism
     - simix_deployment: Logging specific to SIMIX (deployment)
     - simix_environment: Logging specific to SIMIX (environment)
     - simix_host: Logging specific to SIMIX (hosts)
     - simix_io: Logging specific to SIMIX (io)
     - simix_kernel: Logging specific to SIMIX (kernel)
     - simix_network: Logging specific to SIMIX (network)
     - simix_process: Logging specific to SIMIX (process)
     - simix_smurf: Logging specific to SIMIX (SMURF)
     - simix_synchro: Logging specific to SIMIX (synchronization)
   - smpi: All SMPI categories
     - smpi_base: Logging specific to SMPI (base)
     - smpi_bench: Logging specific to SMPI (benchmarking)
     - smpi_coll: Logging specific to SMPI (coll)
     - smpi_comm: Logging specific to SMPI (comm)
     - smpi_group: Logging specific to SMPI (group)
     - smpi_kernel: Logging specific to SMPI (kernel)
     - smpi_mpi: Logging specific to SMPI (mpi)
     - smpi_mpi_dt: Logging specific to SMPI (datatype)
     - smpi_pmpi: Logging specific to SMPI (pmpi)
   - surf: All SURF categories
     - random: Random part of surf
     - surf_config: About the configuration of surf (and the rest of the simulation)
     - surf_cpu: Logging specific to the SURF CPU IMPROVED module
     - surf_cpu_ti: Logging specific to the SURF CPU TRACE INTEGRATION module
     - surf_kernel: Logging specific to SURF (kernel)
     - surf_lagrange: Logging specific to SURF (lagrange)
       - surf_lagrange_dichotomy: Logging specific to SURF (lagrange dichotomy)
     - surf_maxmin: Logging specific to SURF (maxmin)
     - surf_network: Logging specific to the SURF network module
     - surf_network_gtnets: Logging specific to the SURF network GTNetS module
     - surf_network_ns3: Logging specific to the SURF network NS3 module
     - surf_parse: Logging specific to the SURF parsing module
     - surf_route: Routing part of surf
       - surf_routing_generic: Generic implementation of the surf routing
     - surf_route_cluster: Routing part of surf
     - surf_route_dijkstra: Routing part of surf -- dijkstra routing logic
     - surf_route_floyd: Routing part of surf
     - surf_route_full: Routing part of surf
     - surf_route_none: Routing part of surf
     - surf_route_rulebased: Routing part of surf
     - surf_route_vivaldi: Routing part of surf
     - surf_storage: Logging specific to the SURF storage module
     - surf_trace: Surf trace management
     - surf_workstation: Logging specific to the SURF workstation module
   - tesh: TEst SHell utility
   - xbt: All XBT categories (simgrid toolbox)
     - graphxml_parse: Logging specific to the graphxml parsing  module
     - log: Loggings from the logging mechanism itself
     - mm_diff: Logging specific to mm_diff in mmalloc
     - module: module handling
     - peer: peer management
     - replay: Replay trace reader
     - strbuff: String buffers
     - xbt_cfg: configuration support
     - xbt_ddt: Data description
       - xbt_ddt_cbps: callback persistent state
       - xbt_ddt_convert: Inter-architecture convertions
       - xbt_ddt_create: Creating new data descriptions
       - xbt_ddt_exchange: Sending data over the network
       - xbt_ddt_parse: Parsing C data structures to build XBT data description
         - xbt_ddt_lexer: The crude internals of the lexer used for type parsing
     - xbt_dict: Dictionaries provide the same functionalities than hash tables
       - xbt_dict_cursor: To traverse dictionaries
       - xbt_dict_elm: Dictionaries internals
       - xbt_dict_multi: Dictionaries of multiple keys
     - xbt_dyn: Dynamic arrays
     - xbt_ex: Exception mecanism
     - xbt_fifo: FIFO
     - xbt_graph: Graph
     - xbt_lib: A dict with keys of type (name, level)
     - xbt_mallocator: Mallocators
     - xbt_matrix: 2D data storage
     - xbt_parmap: parmap: parallel map
       - xbt_parmap_unit: parmap unit testing
     - xbt_queue: Message exchanging queue
     - xbt_set: set: data container consisting in dict+dynar
     - xbt_sync: Synchronization mechanism
     - xbt_sync_os: Synchronization mechanism (OS-level)
     - xbt_trp: Conveying bytes over the network
       - xbt_trp_meas: Conveying bytes over the network without formating for perf measurements
       - xbt_trp_tcp: TCP buffered transport
@}*/
