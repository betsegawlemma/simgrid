/** @addtogroup XBT_API
 *
 *  The XBT functionalities fall into several categories:
 *   - Portability support. 
 *     - \ref XBT_syscall
 *   - Grounding features
 *     - \ref XBT_ex
 *     - \ref XBT_log
 *     - \ref XBT_error
 *     - \ref XBT_config
 *   - Data structures
 *     - \ref XBT_dynar 
 *     - \ref XBT_dict
 *     - \ref XBT_set 
 *       Data are associated to both an ID (0(1) search) and a name
 *     - \ref XBT_fifo
 *     - \ref XBT_swag
 *     - \ref XBT_heap
 *
 *  @{
 */

  /*PORTABILITY*/
     /** @defgroup XBT_syscall Malloc and friends */

  /*GROUNDING*/
     /** @defgroup XBT_ex     Exception support */
     /** @defgroup XBT_log    Logging support */
     /** @defgroup XBT_error  Assert macro familly */
     /** @defgroup XBT_config Configuration support */

  /*DATA STRUCTS*/
     /** @defgroup XBT_dynar  Dynar: generic dynamic array */
     /** @defgroup XBT_dict   Dict: generic dictionnary */
     /** @defgroup XBT_set    Set: generic set datatype */
     /** @defgroup XBT_fifo   Fifo: generic workqueue */
     /** @defgroup XBT_swag   Swag: O(1) set datatype */
     /** @defgroup XBT_heap Heap: generic heap data structure */

/* ************************* *
 * * PORTABILITY-INTERNALS * *
 * ************************* */

 /** \defgroup XBT_context Portable context implementation
  *  \brief Contexts are a higher level system than <tt>setjump/longjmp</tt> 
  *  for non-preemptible threads.
  *
  *  You shouldn't use it directly since it is merly intended to ease the 
  *  implementation of the serveral programmation environment of the 
  *  SimGrid toolkit (nammely, \ref MSG_API, \ref GRAS_API and \ref SMPI_API).
  *
  *  You should use those mechanism instead.
  */

/** @} */ End of XBT_API
