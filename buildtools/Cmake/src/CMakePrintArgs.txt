exec_program("echo `${CMAKE_C_COMPILER} --version | grep -E [0-9].[0-9].[0-9]$`" OUTPUT_VARIABLE "COMPILER_C_VERSION")
exec_program("echo `${CMAKE_CXX_COMPILER} --version | grep -E [0-9].[0-9].[0-9]$`" OUTPUT_VARIABLE "COMPILER_CXX_VERSION")

if(enable_print_message)
	message("")
	message("________________________________________________________________________________")
	message("________________________________________________________________________________ DEBUG")
	message("SIZEOF_MAX :			${SIZEOF_MAX}")
	message("PTH_STACKGROWTH 		${PTH_STACKGROWTH}")
	message("need_getline			${need_getline}")
	message("need_asprintf			${need_asprintf}")
	message("need_vasprintf			${need_vasprintf}")
	message("PREFER_PORTABLE_SNPRINTF 	${PREFER_PORTABLE_SNPRINTF}")
	message("HAVE_VA_COPY 			${HAVE_VA_COPY}")
	message("GRAS_BIGENDIAN			${GRAS_BIGENDIAN}")
	message("GRAS_ARCH val			${val_big}")
	message("GRAS_ARCH_32_BITS 		${GRAS_ARCH_32_BITS}")
	message("PRINTF_NULL_WORKING 		${PRINTF_NULL_WORKING}")
	message("")
	message("\#define pth_skaddr_makecontext(skaddr,sksize) (${makecontext_addr})")
	message("\#define pth_sksize_makecontext(skaddr,sksize) (${makecontext_size})")
	message("\#define __VA_COPY_USE 	${__VA_COPY_USE}")
	message("")
	message("HAVE_PTHREAD_CREATE		${pthread}")
	message("HAVE_SEM_INIT			${HAVE_SEM_INIT_LIB}")
	message("HAVE_SEM_TIMEDWAIT		${HAVE_SEM_TIMEDWAIT_LIB}")
	message("HAVE_MUTEX_TIMEDLOCK		${HAVE_MUTEX_TIMEDLOCK_LIB}")
	message("HAVE_POSIX_GETTIME		${HAVE_POSIX_GETTIME}")
	message("")
	message("TIME_WITH_SYS_TIME 		${TIME_WITH_SYS_TIME}")
	message("STDC_HEADERS 			${STDC_HEADERS}")
	message("HAVE_PTHREAD_H			${HAVE_PTHREAD_H}")
	message("HAVE_VALGRIND_VALGRIND_H	${HAVE_VALGRIND_VALGRIND_H}")
	message("HAVE_SOCKET_H 			${HAVE_SOCKET_H}")
	message("HAVE_SYS_SOCKET_H 		${HAVE_SYS_SOCKET_H}")
	message("HAVE_STAT_H 			${HAVE_STAT_H}")
	message("HAVE_SYS_STAT_H 		${HAVE_SYS_STAT_H}")
	message("HAVE_WINDOWS_H			${HAVE_WINDOWS_H}")
	message("HAVE_WINSOCK_H 		${HAVE_WINSOCK_H}")
	message("HAVE_WINSOCK2_H 		${HAVE_WINSOCK2_H}")
	message("HAVE_ERRNO_H 			${HAVE_ERRNO_H}")
	message("HAVE_UNISTD_H 			${HAVE_UNISTD_H}")
	message("HAVE_EXECINFO_H 		${HAVE_EXECINFO_H}")
	message("HAVE_SIGNAL_H 			${HAVE_SIGNAL_H}")
	message("HAVE_SYS_TIME_H 		${HAVE_SYS_TIME_H}")
	message("HAVE_TIME_H 			${HAVE_TIME_H}")
	message("HAVE_DLFCN_H			${HAVE_DLFCN_H}")
	message("HAVE_INTTYPES_H			${HAVE_INTTYPES_H}")
	message("HAVE_MEMORY_H			${HAVE_MEMORY_H}")
	message("HAVE_STDLIB_H			${HAVE_STDLIB_H}")
	message("HAVE_STRINGS_H			${HAVE_STRINGS_H}")
	message("HAVE_STRING_H			${HAVE_STRING_H}")

	message("")
	message("HAVE_GETTIMEOFDAY 		${HAVE_GETTIMEOFDAY}")
	message("HAVE_USLEEP 			${HAVE_USLEEP}")
	message("HAVE_GETDTABLESIZE 		${HAVE_GETDTABLESIZE}")
	message("HAVE_SYSCONF 			${HAVE_SYSCONF}")
	message("HAVE_READV 			${HAVE_READV}")
	message("HAVE_POPEN 			${HAVE_POPEN}")
	message("HAVE_SIGNAL 			${HAVE_SIGNAL}")
	message("HAVE_MAKECONTEXT 		${HAVE_MAKECONTEXT}")
	message("HAVE_SNPRINTF			${HAVE_SNPRINTF}")
	message("HAVE_VSNPRINTF			${HAVE_VSNPRINTF}")
	message("HAVE_ASPRINTF			${HAVE_ASPRINTF}")
	message("HAVE_VASPRINTF			${HAVE_VASPRINTF}")

	message("")
	message("RUBY.H : 			${RUBY_INCLUDE_PATH}")
	message("JNI.H : 			${JAVA_INCLUDE_PATH}")
	message("JNI_MD.H : 			${JAVA_INCLUDE_PATH2}")
	message("JAVAC : 			${JAVA_COMPILE}")
	message("LUALIB.H: 			${HAVE_LUA5_1_LUALIB_H}")
	message("LAUXLIB.H: 			${HAVE_LUA5_1_LAUXLIB_H}")
	message("________________________________________________________________________________")
	message("________________________________________________________________________________ DEBUG END")
	message("")
endif(enable_print_message)

message("\nConfiguration of package `simgrid' (revision ${SVN_VERSION}${GIT_VERSION}) on arch (=${GRAS_THISARCH}):")
message("	     BUILDNAME : 	${BUILDNAME}")
message("	     SITE      : 	${SITE}")
message("	     Release   :	simgrid-${simgrid_version}~${SVN_VERSION}${GIT_DATE}")
message("")
message("	 Compiler: c++ : 	${CMAKE_CXX_COMPILER}")
message("	        version:	${COMPILER_CXX_VERSION}")
message("	 Compiler: c   :	${CMAKE_C_COMPILER}")
message("	        version:	${COMPILER_C_VERSION}")
message("")
message("	       CFlags  :	${CMAKE_C_FLAGS}")	
message("	       CPPFlags:	${CMAKE_CXX_FLAGS}")
message("	       LDFlags :	${CMAKE_EXE_LINKER_FLAGS}")
message("")
message("	Context backend:	${with_context}")
message("	Compile Gtnets : 	${HAVE_GTNETS}")
message("	Gtnets path    :	${gtnets_path}")
message("	Compile Java   :   	${HAVE_JAVA}")
message("	Compile Lua    :    	${HAVE_LUA}")
message("	Compile Ruby   :    	${HAVE_RUBY}")
message("")
message("	Maintainer mode:	${enable_maintainer_mode}")
message("	Supernovae mode:	${enable_supernovae}")
message("	Tracing mode   :	${enable_tracing}")
message("")
message("	Simgrid dependencies: 	${SIMGRID_DEP}")
message("	Gras dependencies   : 	${GRAS_DEP}")
message("	Smpi dependencies   : 	${SMPI_DEP}")
message("")
message("	INSTALL_PREFIX: 	${CMAKE_INSTALL_PREFIX}")
message("")

if(HAVE_GTNETS)
message("INFO -->> Take care to have export LD_LIBRARY_PATH before run make command for make examples with gtnets")
message("copy and paste : export LD_LIBRARY_PATH=${gtnets_path}/lib/:$LD_LIBRARY_PATH")

message("")
message("")
endif(HAVE_GTNETS)
