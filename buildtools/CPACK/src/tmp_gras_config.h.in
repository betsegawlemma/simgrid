//This document is maded by user
//With Cmake it creates gras_config.h in <projectdirectory>/src

/* Define if building universal (internal helper macro) */
/* #undef AC_APPLE_UNIVERSAL_BUILD */

/* Arguments passed to the configure script */
/* #undef AC_CONFIGURE_ARGS */

/* Path to the addr2line tool */
#define ADDR2LINE "/usr/bin/addr2line"

/* Predefined possible va_copy() implementation (id: ASP) */
#define __VA_COPY_USE_ASP do { *(d) = *(s); } while (0)

/* Predefined possible va_copy() implementation (id: ASS) */
#define __VA_COPY_USE_ASS do { (d) = (s); } while (0)

/* Predefined possible va_copy() implementation (id: C99) */
#define __VA_COPY_USE_C99 va_copy((d),(s))

/* Define if xbt contexts are based on our threads implementation or not */
/* #undef CONTEXT_THREADS */

/* Define if xbt contexts are based on ucontext or not */
/* #undef CONTEXT_UCONTEXT */

/* Predefined possible va_copy() implementation (id: CPP) */
#define __VA_COPY_USE_CPP memcpy((void *)(d), (void *)(s)), sizeof(*(s))

/* Predefined possible va_copy() implementation (id: CPS) */
#define __VA_COPY_USE_CPS memcpy((void *)&(d), (void *)&(s)), sizeof((s))

/* Predefined possible va_copy() implementation (id: GCB) */
#define __VA_COPY_USE_GCB __builtin_va_copy((d),(s))

/* Predefined possible va_copy() implementation (id: GCH) */
#define __VA_COPY_USE_GCH __va_copy((d),(s))

/* Predefined possible va_copy() implementation (id: GCM) */
#define __VA_COPY_USE_GCM VA_COPY((d),(s))

/* Defined if arrays in struct can straddle struct alignment boundaries. This
   is like than the structure compaction above, but this time, the argument to
   be compacted is an array whom each element would be normally compacted.
   Exemple: struct s { double d; int i; char c[6]; }; Arrays can straddle if c
   is allowed to come just after i. Note that GRAS only support architecture
   presenting this caracteristic so far. */
#define GRAS_ARRAY_STRADDLE_STRUCT 1

/* define if big endian */
#define GRAS_BIGENDIAN 0

/* Defined if structures are compacted when possible. Consider this structure:
   struct s {double d; int i; char c;}; If it is allowed, the char is placed
   just after the int. If not, it has to be on the 8 bytes boundary imposed by
   the double. For now, GRAS requires the structures to be compacted. */
#define GRAS_STRUCT_COMPACT 1

/* defines the GRAS architecture signature of this machine */
#define GRAS_THISARCH 4

/* Define to 1 if you have the <dlfcn.h> header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you have the <errno.h> header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the <execinfo.h> header file. */
#define HAVE_EXECINFO_H 1

/* Define to 1 if you have the `getdtablesize' function. */
#define HAVE_GETDTABLESIZE 1

/* Define to 1 if you have the `gettimeofday' function. */
#define HAVE_GETTIMEOFDAY 1

/* Indicates that we have GTNETS support */
/* #undef HAVE_GTNETS */

/* Define to 1 if you have the <inttypes.h> header file. */
#define HAVE_INTTYPES_H 1

/* defines whether Java bindings must be compiled or not */
/* #undef HAVE_JAVA */

/* Define to 1 if you have the <jni.h> header file. */
/* #undef HAVE_JNI_H */

/* defines whether Lua bindings must be compiled or not */
/* #undef HAVE_LUA */

/* Define to 1 if you have the <lua5.1/lualib.h> header file. */
/* #undef HAVE_LUA5_1_LUALIB_H */

/* Define to 1 if you have the `makecontext' function. */
#define HAVE_MAKECONTEXT 1

/* Define to 1 if you have the <memory.h> header file. */
#define HAVE_MEMORY_H 1

/* Define if pthread_mutex_timedlock() is avaible or not (part of XPG6
   standard only?) */
#define HAVE_MUTEX_TIMEDLOCK 1

/* Define to 1 if you have the `popen' function. */
#define HAVE_POPEN 1

/* Define to 1 if you have the <pthread.h> header file. */
#define HAVE_PTHREAD_H 1

/* Define to 1 if you have the `readv' function. */
#define HAVE_READV 1

/* Define if sem_init() is avaible or not (part of XPG6 standard only) */
/* #undef HAVE_SEM_INIT */

/* Define if sem_timedwait() is avaible or not (part of XPG6 standard only) */
#define HAVE_SEM_TIMEDWAIT 1

/* Define to 1 if you have the `signal' function. */
#define HAVE_SIGNAL 1

/* Define to 1 if you have the <signal.h> header file. */
#define HAVE_SIGNAL_H 1

/* Define to 1 if you have the `snprintf' function. */
#define HAVE_SNPRINTF 1

/* Define to 1 if you have the <stdint.h> header file. */
#define HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the <strings.h> header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the `sysconf' function. */
#define HAVE_SYSCONF 1

/* Define to 1 if you have the <sys/socket.h> header file. */
#define HAVE_SYS_SOCKET_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#define HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/time.h> header file. */
#define HAVE_SYS_TIME_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `usleep' function. */
#define HAVE_USLEEP 1

/* Define to 1 if you have the <valgrind/valgrind.h> header file. */
/* #undef HAVE_VALGRIND_VALGRIND_H */

/* Define if va_copy() macro exists (and no fallback implementation is
   required) */
#define HAVE_VA_COPY 1

/* Define to 1 if you have the `vsnprintf' function. */
#define HAVE_VSNPRINTF 1

/* Define to 1 if you have the <windows.h> header file. */
/* #undef HAVE_WINDOWS_H */

/* Define to 1 if you have the <winsock2.h> header file. */
/* #undef HAVE_WINSOCK2_H */

/* Define to 1 if you have the <winsock.h> header file. */
/* #undef HAVE_WINSOCK_H */

/* Define to the sub-directory in which libtool stores uninstalled libraries.*/
/* #undef LT_OBJDIR */

/* enable the asprintf replacement */
/* #undef NEED_ASPRINTF */

/* enable the vasprintf replacement */
/* #undef NEED_VASPRINTF */

/* Name of package */
/* #undef PACKAGE */

/* Define to the address where bug reports for this package should be sent. */
/* #undef PACKAGE_BUGREPORT */

/* Define to the full name of this package. */
/* #undef PACKAGE_NAME */

/* Define to the full name and version of this package. */
/* #undef PACKAGE_STRING */

/* Define to the one symbol short name of this package. */
/* #undef PACKAGE_TARNAME */

/* Define to the home page for this package. */
/* #undef PACKAGE_URL */

/* Define to the version of this package. */
/* #undef PACKAGE_VERSION */

/* "enable replacement (v)snprintf if system (v)snprintf is broken" */
/* #undef PREFER_PORTABLE_SNPRINTF */

/* Indicates whether printf("%s",NULL) works */
#define PRINTF_NULL_WORKING 1

/* define for stack growth */
#define PTH_STACKGROWTH -1

/* enable the getline replacement */
/* #undef SIMGRID_NEED_GETLINE */

/* The maximal size of any scalar on this arch */
#define SIZEOF_MAX 8

/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#define TIME_WITH_SYS_TIME 1

/* Version number of package */
/* #undef VERSION */

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
/* #  undef WORDS_BIGENDIAN */
# endif
#endif

/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
   `char[]'. */
/* #undef YYTEXT_POINTER */

/* Optional va_copy() implementation activation */
#ifndef HAVE_VA_COPY
#define va_copy(d, s) __VA_COPY_USE
#endif


/* Define to id of used va_copy() implementation */
#define __VA_COPY_USE __VA_COPY_USE_C99

/* Define to empty if `const' does not conform to ANSI C. */
/* #undef const */

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
/* #undef inline */
#endif

/* Define to `unsigned int' if <sys/types.h> does not define. */
/* #undef size_t */
