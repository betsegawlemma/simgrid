### define source packages

set(EXTRA_DIST 
	${PROJECT_DIRECTORY}/src/portable.h
	${PROJECT_DIRECTORY}/src/xbt/mallocator_private.h
	${PROJECT_DIRECTORY}/src/xbt/dict_private.h
	${PROJECT_DIRECTORY}/src/xbt/heap_private.h
	${PROJECT_DIRECTORY}/src/xbt/fifo_private.h
	${PROJECT_DIRECTORY}/src/xbt/graph_private.h
	${PROJECT_DIRECTORY}/src/xbt/graphxml_parse.c
	${PROJECT_DIRECTORY}/src/xbt/graphxml.l
	${PROJECT_DIRECTORY}/src/xbt/graphxml.c
	${PROJECT_DIRECTORY}/src/xbt/graphxml.dtd
	${PROJECT_DIRECTORY}/src/xbt/log_private.h
	${PROJECT_DIRECTORY}/src/xbt/ex_interface.h
	${PROJECT_DIRECTORY}/src/xbt/backtrace_linux.c
	${PROJECT_DIRECTORY}/src/xbt/backtrace_windows.c
	${PROJECT_DIRECTORY}/src/xbt/backtrace_dummy.c
	${PROJECT_DIRECTORY}/src/surf/maxmin_private.h
	${PROJECT_DIRECTORY}/src/surf/trace_mgr_private.h
	${PROJECT_DIRECTORY}/src/surf/surf_private.h
	${PROJECT_DIRECTORY}/src/surf/surfxml_parse.c
	${PROJECT_DIRECTORY}/src/surf/simgrid_dtd.l
	${PROJECT_DIRECTORY}/src/surf/simgrid_dtd.c
	${PROJECT_DIRECTORY}/src/surf/simgrid.dtd
	${PROJECT_DIRECTORY}/src/surf/network_private.h
	${PROJECT_DIRECTORY}/src/surf/network_gtnets_private.h
	${PROJECT_DIRECTORY}/src/surf/gtnets/gtnets_interface.h
	${PROJECT_DIRECTORY}/src/surf/gtnets/gtnets_simulator.h
	${PROJECT_DIRECTORY}/src/surf/gtnets/gtnets_topology.h
	${PROJECT_DIRECTORY}/src/surf/cpu_ti_private.h
	${PROJECT_DIRECTORY}/src/include/surf/surf_resource.h
	${PROJECT_DIRECTORY}/src/include/surf/datatypes.h
	${PROJECT_DIRECTORY}/src/include/surf/maxmin.h
	${PROJECT_DIRECTORY}/src/include/surf/trace_mgr.h
	${PROJECT_DIRECTORY}/src/include/surf/surf.h
	${PROJECT_DIRECTORY}/src/include/surf/surfxml_parse_private.h
	${PROJECT_DIRECTORY}/src/include/surf/random_mgr.h
	${PROJECT_DIRECTORY}/src/include/surf/surf_resource_lmm.h
	${PROJECT_DIRECTORY}/src/include/xbt/wine_dbghelp.h
	${PROJECT_DIRECTORY}/src/include/xbt/xbt_os_time.h
	${PROJECT_DIRECTORY}/src/include/xbt/xbt_os_thread.h
	${PROJECT_DIRECTORY}/src/msg/private.h
	${PROJECT_DIRECTORY}/src/msg/mailbox.h
	${PROJECT_DIRECTORY}/src/simdag/private.h
	${PROJECT_DIRECTORY}/src/simdag/dax.dtd
	${PROJECT_DIRECTORY}/src/simdag/dax_dtd.l
	${PROJECT_DIRECTORY}/src/simdag/dax_dtd.h
	${PROJECT_DIRECTORY}/src/simdag/dax_dtd.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/ddt_parse.yy.l
	${PROJECT_DIRECTORY}/src/gras/DataDesc/ddt_parse.yy.h
	${PROJECT_DIRECTORY}/src/gras/Virtu/virtu_rl.h
	${PROJECT_DIRECTORY}/src/gras/Virtu/virtu_sg.h
	${PROJECT_DIRECTORY}/src/gras/Virtu/virtu_interface.h
	${PROJECT_DIRECTORY}/src/gras/Virtu/virtu_private.h
	${PROJECT_DIRECTORY}/src/gras/Transport/transport_interface.h
	${PROJECT_DIRECTORY}/src/amok/Bandwidth/bandwidth_private.h
	${PROJECT_DIRECTORY}/src/amok/amok_modinter.h
	${PROJECT_DIRECTORY}/src/include/simix/simix.h
	${PROJECT_DIRECTORY}/src/include/simix/datatypes.h
	${PROJECT_DIRECTORY}/src/include/simix/context.h
	${PROJECT_DIRECTORY}/src/simix/private.h
	${PROJECT_DIRECTORY}/src/simix/smx_context_private.h
	${PROJECT_DIRECTORY}/src/simix/smx_context_java.h
	${PROJECT_DIRECTORY}/src/smpi/private.h
	${PROJECT_DIRECTORY}/src/smpi/smpi_coll_private.h
	${PROJECT_DIRECTORY}/src/smpi/smpi_mpi_dt_private.h
	${PROJECT_DIRECTORY}/src/smpi/README
	${PROJECT_DIRECTORY}/src/mk_supernovae.sh
)

set(XBT_RL_SRC 
	${PROJECT_DIRECTORY}/src/xbt/xbt_rl_synchro.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_rl_time.c
)

set(XBT_SG_SRC 
	${PROJECT_DIRECTORY}/src/xbt/xbt_sg_synchro.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_sg_time.c
)     

set(SMPI_SRC
	${PROJECT_DIRECTORY}/src/smpi/smpi_base.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_bench.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_global.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_mpi.c
	#${PROJECT_DIRECTORY}/src/smpi/smpi_sender.c
	#${PROJECT_DIRECTORY}/src/smpi/smpi_receiver.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_comm.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_group.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_util.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_coll.c
	${PROJECT_DIRECTORY}/src/smpi/smpi_mpi_dt.c
)

set(JMSG_C_SRC
	${PROJECT_DIRECTORY}/src/simix/smx_context_java.c
	${PROJECT_DIRECTORY}/src/java/jxbt_utilities.c
	${PROJECT_DIRECTORY}/src/java/jxbt_utilities.h
	${PROJECT_DIRECTORY}/src/java/jmsg.c 
	${PROJECT_DIRECTORY}/src/java/jmsg.h
	#${PROJECT_DIRECTORY}/src/java/jmsg_channel.c
	#${PROJECT_DIRECTORY}/src/java/jmsg_channel.h
	${PROJECT_DIRECTORY}/src/java/jmsg_host.c
	${PROJECT_DIRECTORY}/src/java/jmsg_host.h
	${PROJECT_DIRECTORY}/src/java/jmsg_process.c
	${PROJECT_DIRECTORY}/src/java/jmsg_process.h
	${PROJECT_DIRECTORY}/src/java/jmsg_task.c
	${PROJECT_DIRECTORY}/src/java/jmsg_task.h
	${PROJECT_DIRECTORY}/src/java/jmsg_application_handler.c
	${PROJECT_DIRECTORY}/src/java/jmsg_application_handler.h
)

set(JMSG_JAVA_SRC
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/MsgException.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/JniException.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/NativeException.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/HostNotFoundException.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/ProcessNotFoundException.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/Msg.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/Process.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/Host.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/Task.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/MsgNative.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/ApplicationHandler.java
	${PROJECT_DIRECTORY}/src/java/simgrid/msg/Sem.java
)

set(GRAS_RL_SRC
	${PROJECT_DIRECTORY}/src/gras/rl_stubs.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_os_thread.c
	${PROJECT_DIRECTORY}/src/gras/Transport/rl_transport.c
	${PROJECT_DIRECTORY}/src/gras/Transport/transport_plugin_file.c
	${PROJECT_DIRECTORY}/src/gras/Transport/transport_plugin_tcp.c
	${PROJECT_DIRECTORY}/src/gras/Virtu/rl_emul.c
	${PROJECT_DIRECTORY}/src/gras/Virtu/rl_process.c
	${PROJECT_DIRECTORY}/src/gras/Virtu/rl_dns.c
	${PROJECT_DIRECTORY}/src/gras/Msg/rl_msg.c
	${XBT_RL_SRC}
)

set(XBT_SRC 
	${PROJECT_DIRECTORY}/src/xbt/snprintf.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_str.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_strbuff.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_sha.c
	${PROJECT_DIRECTORY}/src/xbt/ex.c
	${PROJECT_DIRECTORY}/src/xbt_modinter.h
	${PROJECT_DIRECTORY}/src/gras_modinter.h
	${PROJECT_DIRECTORY}/src/xbt/xbt_virtu.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_os_time.c
	${PROJECT_DIRECTORY}/src/xbt/asserts.c
	${PROJECT_DIRECTORY}/src/xbt/log.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_log_appender_file.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_log_layout_simple.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_log_layout_format.c
	${PROJECT_DIRECTORY}/src/xbt/mallocator.c
	${PROJECT_DIRECTORY}/src/xbt/dynar.c
	${PROJECT_DIRECTORY}/src/xbt/dict.c
	${PROJECT_DIRECTORY}/src/xbt/dict_elm.c
	${PROJECT_DIRECTORY}/src/xbt/dict_cursor.c
	${PROJECT_DIRECTORY}/src/xbt/dict_multi.c
	${PROJECT_DIRECTORY}/src/xbt/heap.c
	${PROJECT_DIRECTORY}/src/xbt/fifo.c
	${PROJECT_DIRECTORY}/src/xbt/swag.c
	${PROJECT_DIRECTORY}/src/xbt/graph.c
	${PROJECT_DIRECTORY}/src/xbt/set.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_matrix.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_queue.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_synchro.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_peer.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_main.c
	${PROJECT_DIRECTORY}/src/xbt/config.c
	${PROJECT_DIRECTORY}/src/xbt/cunit.c
	${PROJECT_DIRECTORY}/src/xbt/graphxml_parse.c
)

set(GTNETS_SRC 
	${PROJECT_DIRECTORY}/src/surf/gtnets/gtnets_simulator.cc
	${PROJECT_DIRECTORY}/src/surf/gtnets/gtnets_topology.cc
	${PROJECT_DIRECTORY}/src/surf/gtnets/gtnets_interface.cc
	${PROJECT_DIRECTORY}/src/surf/network_gtnets.c
)

set(SURF_SRC 
	${PROJECT_DIRECTORY}/src/surf/surf_model.c
	${PROJECT_DIRECTORY}/src/surf/surf_action.c
	${PROJECT_DIRECTORY}/src/surf/surf_routing.c
	${PROJECT_DIRECTORY}/src/surf/surf_config.c
	${PROJECT_DIRECTORY}/src/surf/maxmin.c
	${PROJECT_DIRECTORY}/src/surf/fair_bottleneck.c
	${PROJECT_DIRECTORY}/src/surf/lagrange.c
	${PROJECT_DIRECTORY}/src/surf/trace_mgr.c
	${PROJECT_DIRECTORY}/src/surf/random_mgr.c
	${PROJECT_DIRECTORY}/src/surf/surf.c
	${PROJECT_DIRECTORY}/src/surf/surfxml_parse.c
	${PROJECT_DIRECTORY}/src/surf/cpu.c
	${PROJECT_DIRECTORY}/src/surf/network.c
	${PROJECT_DIRECTORY}/src/surf/network_constant.c
	${PROJECT_DIRECTORY}/src/surf/workstation.c
	${PROJECT_DIRECTORY}/src/surf/surf_model_timer.c
	${PROJECT_DIRECTORY}/src/surf/workstation_ptask_L07.c
	${PROJECT_DIRECTORY}/src/surf/cpu_ti.c
	${PROJECT_DIRECTORY}/src/surf/cpu_im.c
	${PROJECT_DIRECTORY}/src/xbt/xbt_sg_stubs.c
)

set(SIMIX_SRC 
	${PROJECT_DIRECTORY}/src/simix/smx_global.c
	${PROJECT_DIRECTORY}/src/simix/smx_deployment.c
	${PROJECT_DIRECTORY}/src/simix/smx_environment.c
	${PROJECT_DIRECTORY}/src/simix/smx_host.c
	${PROJECT_DIRECTORY}/src/simix/smx_process.c
	${PROJECT_DIRECTORY}/src/simix/smx_context.c
	${PROJECT_DIRECTORY}/src/simix/smx_action.c
	${PROJECT_DIRECTORY}/src/simix/smx_synchro.c
	${PROJECT_DIRECTORY}/src/simix/smx_network.c
)

set(MSG_SRC
	${PROJECT_DIRECTORY}/src/msg/msg_config.c
	${PROJECT_DIRECTORY}/src/msg/task.c
	${PROJECT_DIRECTORY}/src/msg/host.c
	${PROJECT_DIRECTORY}/src/msg/m_process.c
	${PROJECT_DIRECTORY}/src/msg/gos.c
	${PROJECT_DIRECTORY}/src/msg/global.c
	${PROJECT_DIRECTORY}/src/msg/environment.c
	${PROJECT_DIRECTORY}/src/msg/deployment.c
	${PROJECT_DIRECTORY}/src/msg/msg_mailbox.c
	${PROJECT_DIRECTORY}/src/msg/msg_actions.c
)

set(SIMDAG_SRC
	${PROJECT_DIRECTORY}/src/simdag/sd_global.c
	${PROJECT_DIRECTORY}/src/simdag/sd_link.c
	${PROJECT_DIRECTORY}/src/simdag/sd_task.c
	${PROJECT_DIRECTORY}/src/simdag/sd_workstation.c
	${PROJECT_DIRECTORY}/src/simdag/sd_daxloader.c
)

set(GRAS_COMMON_SRC
	${PROJECT_DIRECTORY}/src/gras/gras.c
	${PROJECT_DIRECTORY}/src/gras/Transport/transport.c
	${PROJECT_DIRECTORY}/src/gras/Transport/transport_private.h
	${PROJECT_DIRECTORY}/src/gras/Msg/gras_msg_mod.c
	${PROJECT_DIRECTORY}/src/gras/Msg/gras_msg_types.c
	${PROJECT_DIRECTORY}/src/gras/Msg/gras_msg_exchange.c
	${PROJECT_DIRECTORY}/src/gras/Msg/gras_msg_listener.c
	${PROJECT_DIRECTORY}/src/gras/Msg/rpc.c 
	${PROJECT_DIRECTORY}/src/gras/Msg/timer.c
	${PROJECT_DIRECTORY}/src/gras/Msg/msg_interface.h
	${PROJECT_DIRECTORY}/src/gras/Msg/msg_private.h
	${PROJECT_DIRECTORY}/src/gras/Virtu/process.c
	${PROJECT_DIRECTORY}/src/gras/Virtu/gras_module.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/ddt_create.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/ddt_convert.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/ddt_exchange.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/cbps.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/datadesc.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/datadesc_interface.h
	${PROJECT_DIRECTORY}/src/gras/DataDesc/datadesc_private.h
	${PROJECT_DIRECTORY}/src/gras/DataDesc/ddt_parse.c
	${PROJECT_DIRECTORY}/src/gras/DataDesc/ddt_parse.yy.c
)

set(GRAS_SG_SRC
	${PROJECT_DIRECTORY}/src/gras/Transport/sg_transport.c
	${PROJECT_DIRECTORY}/src/gras/Transport/transport_plugin_sg.c
	${PROJECT_DIRECTORY}/src/gras/Virtu/sg_emul.c
	${PROJECT_DIRECTORY}/src/gras/Virtu/sg_process.c
	${PROJECT_DIRECTORY}/src/gras/Virtu/sg_dns.c
	${PROJECT_DIRECTORY}/src/gras/Msg/sg_msg.c
	${XBT_SG_SRC}
)

set(AMOK_SRC
	${PROJECT_DIRECTORY}/src/amok/amok_base.c
	${PROJECT_DIRECTORY}/src/amok/Bandwidth/bandwidth.c
	${PROJECT_DIRECTORY}/src/amok/Bandwidth/saturate.c
	${PROJECT_DIRECTORY}/src/amok/PeerManagement/peermanagement.c
)

set(LUA_SRC
	${PROJECT_DIRECTORY}/src/simix/smx_context_lua.c
	${PROJECT_DIRECTORY}/src/bindings/lua/Msglua.c
)

set(RUBY_SRC
${PROJECT_DIRECTORY}/src/simix/smx_context_ruby.c
${PROJECT_DIRECTORY}/src/bindings/ruby/rb_msg_process.c
${PROJECT_DIRECTORY}/src/bindings/ruby/rb_msg_host.c
${PROJECT_DIRECTORY}/src/bindings/ruby/rb_msg_task.c
${PROJECT_DIRECTORY}/src/bindings/ruby/rb_application_handler.c
)

### depend of some variables setted upper
# -->CONTEXT_THREADS
if(${CONTEXT_THREADS})
	set(SURF_SRC
		${SURF_SRC}
		${PROJECT_DIRECTORY}/src/xbt/xbt_os_thread.c
		${PROJECT_DIRECTORY}/src/simix/smx_context_thread.c
	)
	set(EXTRA_DIST
		${EXTRA_DIST}
		${PROJECT_DIRECTORY}/src/simix/smx_context_sysv.c
	)
else(${CONTEXT_THREADS})
	set(SURF_SRC
		${SURF_SRC}
		${PROJECT_DIRECTORY}/src/simix/smx_context_sysv.c
	)
	set(EXTRA_DIST
		${EXTRA_DIST}
		${PROJECT_DIRECTORY}/src/xbt/xbt_os_thread.c
		${PROJECT_DIRECTORY}/src/simix/smx_context_thread.c
	)
endif(${CONTEXT_THREADS})

# -->HAVE_GTNETS
if(HAVE_GTNETS)
  	set(GTNETS_USED 
		${GTNETS_SRC}
	)
else(HAVE_GTNETS)
  	set(GTNETS_USED "")
	set(EXTRA_DIST
		${EXTRA_DIST}
		${GTNETS_SRC}
	)
endif(HAVE_GTNETS)

set(EXTRA_DIST
	${EXTRA_DIST}
	${JMSG_JAVA_SRC}
)

### Simgrid Lib sources
set(simgrid_sources
	${XBT_SRC}
	${SURF_SRC}
	${GTNETS_USED}
	${SIMIX_SRC}
	${MSG_SRC}
	${SIMDAG_SRC}
	${GRAS_COMMON_SRC}
	${GRAS_SG_SRC}
	${AMOK_SRC}
)

### Gras Lib sources
set(gras_sources
	${XBT_SRC}
	${GRAS_COMMON_SRC}
	${GRAS_RL_SRC}
	${AMOK_SRC}
)

if(${HAVE_LUA})
  	set(simgrid_sources
		${simgrid_sources}
		${LUA_SRC}
	)
elseif(${HAVE_LUA})
  	set(EXTRA_DIST
		${EXTRA_DIST}
		${LUA_SRC}
	)
endif(${HAVE_LUA})

if(${HAVE_JAVA})
	set(simgrid_sources
		${simgrid_sources}
		${JMSG_C_SRC} # add the binding support to the library
	)
else(${HAVE_JAVA})
	set(EXTRA_DIST
		${EXTRA_DIST}
		${JMSG_C_SRC}
		${MSG_SRC}
	)
endif(${HAVE_JAVA})

if(${HAVE_RUBY_H})
	set(simgrid_sources
		${simgrid_sources}
		${RUBY_SRC}
	)
else(${HAVE_RUBY_H})
	set(EXTRA_DIST
		${EXTRA_DIST}
		${RUBY_SRC}
	)
endif(${HAVE_RUBY_H})


file(GLOB_RECURSE add_src_files
"${PROJECT_DIRECTORY}/examples/*.c"
"${PROJECT_DIRECTORY}/teshsuite/*.c"
"${PROJECT_DIRECTORY}/testsuite/*.c"
"${PROJECT_DIRECTORY}/tools/*.c"
"${PROJECT_DIRECTORY}/examples/*.cxx"
"${PROJECT_DIRECTORY}/teshsuite/*.cxx"
"${PROJECT_DIRECTORY}/testsuite/*.cxx"
"${PROJECT_DIRECTORY}/tools/*.cxx"
"${PROJECT_DIRECTORY}/examples/*CMakeLists.txt"
"${PROJECT_DIRECTORY}/teshsuite/*CMakeLists.txt"
"${PROJECT_DIRECTORY}/testsuite/*CMakeLists.txt"
"${PROJECT_DIRECTORY}/tools/*CMakeLists.txt"
)
#message("\n\nadd_src_files:\n${add_src_files}")

file(GLOB_RECURSE include_files
"${PROJECT_DIRECTORY}/include/*.h"
"${PROJECT_DIRECTORY}/teshsuite/*.h"
"${PROJECT_DIRECTORY}/testsuite/*.h"
"${PROJECT_DIRECTORY}/tools/*.h"
"${PROJECT_DIRECTORY}/examples/*.h"
"${PROJECT_DIRECTORY}/src/*.h.in"
"${PROJECT_DIRECTORY}/include/*.h.in"
)
#message("\n\ninclude:\n${include_files}")

file(GLOB_RECURSE xml_files
"${PROJECT_DIRECTORY}/examples/*.xml"
"${PROJECT_DIRECTORY}/include/*.xml"
"${PROJECT_DIRECTORY}/src/*.xml"
"${PROJECT_DIRECTORY}/teshsuite/*.xml"
"${PROJECT_DIRECTORY}/testsuite/*.xml"
"${PROJECT_DIRECTORY}/tools/*.xml"
)
#message("\n\nxml:\n${xml_files}")
